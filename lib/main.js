/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 65);
/******/ })
/************************************************************************/
/******/ ({

/***/ 65:
/* unknown exports provided */
/* all exports used */
/*!***********************!*\
  !*** ../lib/index.js ***!
  \***********************/
/***/ function(module, exports) {

eval("/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// identity function for calling harmory imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n\n/******/ \t// define getter function for harmory exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tObject.defineProperty(exports, name, {\n/******/ \t\t\tconfigurable: false,\n/******/ \t\t\tenumerable: true,\n/******/ \t\t\tget: getter\n/******/ \t\t});\n/******/ \t};\n\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 67);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/* unknown exports provided */\n/* all exports used */\n/*!***********************!*\\\n  !*** external \"path\" ***!\n  \\***********************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"path\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcInBhdGhcIj81YjJhIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInBhdGhcIik7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJwYXRoXCJcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDIgNSJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\");\n\n/***/ },\n/* 1 */\n/* unknown exports provided */\n/* all exports used */\n/*!**************************!*\\\n  !*** external \"webpack\" ***!\n  \\**************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"webpack\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcIndlYnBhY2tcIj8zOTNkIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIndlYnBhY2tcIik7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJ3ZWJwYWNrXCJcbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDIgMyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\");\n\n/***/ },\n/* 2 */\n/* unknown exports provided */\n/* all exports used */\n/*!**************************************!*\\\n  !*** external \"html-webpack-plugin\" ***!\n  \\**************************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"html-webpack-plugin\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcImh0bWwtd2VicGFjay1wbHVnaW5cIj8xOGVjIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImh0bWwtd2VicGFjay1wbHVnaW5cIik7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJodG1sLXdlYnBhY2stcGx1Z2luXCJcbi8vIG1vZHVsZSBpZCA9IDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDIgMyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\");\n\n/***/ },\n/* 3 */\n/* unknown exports provided */\n/* all exports used */\n/*!************************!*\\\n  !*** external \"chalk\" ***!\n  \\************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"chalk\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcImNoYWxrXCI/NTNmNyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJjaGFsa1wiKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcImNoYWxrXCJcbi8vIG1vZHVsZSBpZCA9IDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\");\n\n/***/ },\n/* 4 */\n/* unknown exports provided */\n/* all exports used */\n/*!******************************************************!*\\\n  !*** external \"case-sensitive-paths-webpack-plugin\" ***!\n  \\******************************************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"case-sensitive-paths-webpack-plugin\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcImNhc2Utc2Vuc2l0aXZlLXBhdGhzLXdlYnBhY2stcGx1Z2luXCI/M2I3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJjYXNlLXNlbnNpdGl2ZS1wYXRocy13ZWJwYWNrLXBsdWdpblwiKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcImNhc2Utc2Vuc2l0aXZlLXBhdGhzLXdlYnBhY2stcGx1Z2luXCJcbi8vIG1vZHVsZSBpZCA9IDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDMiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 5 */\n/* unknown exports provided */\n/* all exports used */\n/*!*********************************!*\\\n  !*** external \"find-cache-dir\" ***!\n  \\*********************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"find-cache-dir\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcImZpbmQtY2FjaGUtZGlyXCI/ZjNlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJmaW5kLWNhY2hlLWRpclwiKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcImZpbmQtY2FjaGUtZGlyXCJcbi8vIG1vZHVsZSBpZCA9IDVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDMiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 6 */\n/* unknown exports provided */\n/* all exports used */\n/*!***************************************!*\\\n  !*** external \"escape-string-regexp\" ***!\n  \\***************************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"escape-string-regexp\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcImVzY2FwZS1zdHJpbmctcmVnZXhwXCI/ZDY0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJlc2NhcGUtc3RyaW5nLXJlZ2V4cFwiKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcImVzY2FwZS1zdHJpbmctcmVnZXhwXCJcbi8vIG1vZHVsZSBpZCA9IDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDMiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 7 */\n/* unknown exports provided */\n/* all exports used */\n/*!***************************!*\\\n  !*** external \"chokidar\" ***!\n  \\***************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"chokidar\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcImNob2tpZGFyXCI/OGZmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJjaG9raWRhclwiKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcImNob2tpZGFyXCJcbi8vIG1vZHVsZSBpZCA9IDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\");\n\n/***/ },\n/* 8 */\n/* unknown exports provided */\n/* all exports used */\n/*!*********************!*\\\n  !*** external \"fs\" ***!\n  \\*********************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"fs\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcImZzXCI/MmUwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJmc1wiKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcImZzXCJcbi8vIG1vZHVsZSBpZCA9IDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\");\n\n/***/ },\n/* 9 */\n/* unknown exports provided */\n/* all exports used */\n/*!******************!*\\\n  !*** ./utils.js ***!\n  \\******************/\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"'use strict';Object.defineProperty(exports,\\\"__esModule\\\",{value:true});exports.ListenerManager=exports.getSubDirs=exports.findRoot=exports.pathExists=exports.wait=exports.log=exports.Spinner=undefined;var _fs=__webpack_require__(/*! fs */ 8);var _fs2=_interopRequireDefault(_fs);var _path=__webpack_require__(/*! path */ 0);var _path2=_interopRequireDefault(_path);var _chalk=__webpack_require__(/*! chalk */ 3);var _chalk2=_interopRequireDefault(_chalk);var _ora=__webpack_require__(/*! ora */ 11);var _ora2=_interopRequireDefault(_ora);var _findup=__webpack_require__(/*! findup */ 21);var _findup2=_interopRequireDefault(_findup);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\\\"Cannot call a class as a function\\\");}}var Spinner=exports.Spinner=function(){function Spinner(){_classCallCheck(this,Spinner);this.defaultConfig={text:'waiting'};this.configs={wait:{text:'Init building may take more time, please be patient',color:'white',spinner:'clock'},running:{text:'Re-building',color:'yellow',spinner:'runner'},done:{text:'http://127.0.0.1:3000',color:'green',spinner:'earth'},error:{text:'Got a error: TODO',color:'red',spinner:{interval:0,frames:['✖ ']}}};}Spinner.prototype.stop=function stop(){this.spinner&&this.spinner.stop();};/*\\n  spinner.start('done')\\n  spinner.start('done', {text: 'done'})\\n  spinner.start({text: 'done'})\\n   */Spinner.prototype.start=function start(){var type=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.defaultConfig;var option=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var opt={};opt=type+''===type?Object.assign({},this.configs[type]||{},option):type;this.stop();this.spinner=(0,_ora2.default)(opt).start();};return Spinner;}();var symbols=process.platform==='win32'?{info:'i',success:'√',warning:'‼',error:'×'}:{info:'ℹ',success:'✔',warning:'⚠',error:'✖'};var colors={info:'blue',success:'green',warning:'yellow',error:'red'};var renderLog=function renderLog(type){return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}console.log('');args.map(function(arg){return console.log(_chalk2.default[colors[type]](symbols[type])+' '+arg);});};};var log=exports.log={};Object.keys(symbols).map(function(symbol){log[symbol]=renderLog(symbol);});var wait=exports.wait=function wait(time){return new Promise(function(resolve,reject){return setTimeout(resolve,1000*time);});};var pathExists=exports.pathExists=function pathExists(path){return new Promise(function(resolve){_fs2.default.access(path,function(err){resolve(!err);});});};var findRoot=exports.findRoot=function findRoot(filename,dir){try{return _findup2.default.sync(dir,filename);}catch(err){// not found\\nreturn null;}};var getSubDirs=exports.getSubDirs=function getSubDirs(parent){return new Promise(function(resolve,reject){_fs2.default.readdir(parent,function(err,data){if(err)return reject(err);resolve(data.filter(function(dir){return _fs2.default.statSync(_path2.default.join(parent,dir)).isDirectory();}));});});};var ListenerManager=exports.ListenerManager=function(){function ListenerManager(listener){var _this=this;_classCallCheck(this,ListenerManager);this.key=0;this.connections={};this.listener=listener;this.listener.on('connection',function(conn){var key=++_this.key;_this.connections[key]=conn;conn.on('close',function(){delete _this.connections[key];});});}ListenerManager.prototype.dispose=function dispose(){var _this2=this;return new Promise(function(resolve){Object.keys(_this2.connections).forEach(function(key){return _this2.connections[key].destroy();});if(_this2.listener){_this2.listener.close(function(){return resolve();});}else{resolve();}});};return ListenerManager;}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvdXRpbHMuanM/MmI0YyIsIndlYnBhY2s6Ly8vP2Q0MWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzIGZyb20gJ2ZzJ1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCdcbmltcG9ydCBjaGFsayBmcm9tICdjaGFsaydcbmltcG9ydCBvcmEgZnJvbSAnb3JhJ1xuaW1wb3J0IGZpbmR1cCBmcm9tICdmaW5kdXAnXG5cbmV4cG9ydCBjbGFzcyBTcGlubmVyIHtcbiAgY29uc3RydWN0b3IgKCkge1xuICAgIHRoaXMuZGVmYXVsdENvbmZpZyA9IHtcbiAgICAgIHRleHQ6ICd3YWl0aW5nJ1xuICAgIH1cbiAgICB0aGlzLmNvbmZpZ3MgPSB7XG4gICAgICB3YWl0OiB7XG4gICAgICAgIHRleHQ6ICdJbml0IGJ1aWxkaW5nIG1heSB0YWtlIG1vcmUgdGltZSwgcGxlYXNlIGJlIHBhdGllbnQnLFxuICAgICAgICBjb2xvcjogJ3doaXRlJyxcbiAgICAgICAgc3Bpbm5lcjogJ2Nsb2NrJ1xuICAgICAgfSxcbiAgICAgIHJ1bm5pbmc6IHtcbiAgICAgICAgdGV4dDogJ1JlLWJ1aWxkaW5nJyxcbiAgICAgICAgY29sb3I6ICd5ZWxsb3cnLFxuICAgICAgICBzcGlubmVyOiAncnVubmVyJ1xuICAgICAgfSxcbiAgICAgIGRvbmU6IHtcbiAgICAgICAgdGV4dDogJ2h0dHA6Ly8xMjcuMC4wLjE6MzAwMCcsXG4gICAgICAgIGNvbG9yOiAnZ3JlZW4nLFxuICAgICAgICBzcGlubmVyOiAnZWFydGgnXG4gICAgICB9LFxuICAgICAgZXJyb3I6IHtcbiAgICAgICAgdGV4dDogJ0dvdCBhIGVycm9yOiBUT0RPJyxcbiAgICAgICAgY29sb3I6ICdyZWQnLFxuICAgICAgICBzcGlubmVyOiB7XG4gICAgICAgICAgaW50ZXJ2YWw6IDAsXG4gICAgICAgICAgZnJhbWVzOiBbXG4gICAgICAgICAgICAn4pyWICdcbiAgICAgICAgICBdXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBzdG9wICgpIHtcbiAgICB0aGlzLnNwaW5uZXIgJiYgdGhpcy5zcGlubmVyLnN0b3AoKVxuICB9XG5cbiAgLypcbiAgc3Bpbm5lci5zdGFydCgnZG9uZScpXG4gIHNwaW5uZXIuc3RhcnQoJ2RvbmUnLCB7dGV4dDogJ2RvbmUnfSlcbiAgc3Bpbm5lci5zdGFydCh7dGV4dDogJ2RvbmUnfSlcbiAgICovXG4gIHN0YXJ0ICh0eXBlID0gdGhpcy5kZWZhdWx0Q29uZmlnLCBvcHRpb24gPSB7fSkge1xuICAgIGxldCBvcHQgPSB7fVxuICAgIG9wdCA9IHR5cGUgKyAnJyA9PT0gdHlwZVxuICAgICAgPyBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmNvbmZpZ3NbdHlwZV0gfHwge30sIG9wdGlvbilcbiAgICAgIDogdHlwZVxuICAgIHRoaXMuc3RvcCgpXG4gICAgdGhpcy5zcGlubmVyID0gb3JhKG9wdCkuc3RhcnQoKVxuICB9XG59XG5cbmNvbnN0IHN5bWJvbHMgPSBwcm9jZXNzLnBsYXRmb3JtID09PSAnd2luMzInXG4gID8ge1xuICAgIGluZm86ICdpJyxcbiAgICBzdWNjZXNzOiAn4oiaJyxcbiAgICB3YXJuaW5nOiAn4oC8JyxcbiAgICBlcnJvcjogJ8OXJ1xuICB9XG4gIDoge1xuICAgIGluZm86ICfihLknLFxuICAgIHN1Y2Nlc3M6ICfinJQnLFxuICAgIHdhcm5pbmc6ICfimqAnLFxuICAgIGVycm9yOiAn4pyWJ1xuICB9XG5cbmNvbnN0IGNvbG9ycyA9IHtcbiAgaW5mbzogJ2JsdWUnLFxuICBzdWNjZXNzOiAnZ3JlZW4nLFxuICB3YXJuaW5nOiAneWVsbG93JyxcbiAgZXJyb3I6ICdyZWQnXG59XG5cbmNvbnN0IHJlbmRlckxvZyA9IHR5cGUgPT4gKC4uLmFyZ3MpID0+IHtcbiAgY29uc29sZS5sb2coJycpXG4gIGFyZ3MubWFwKGFyZyA9PiBjb25zb2xlLmxvZyhgJHtjaGFsa1tjb2xvcnNbdHlwZV1dKHN5bWJvbHNbdHlwZV0pfSAke2FyZ31gKSlcbn1cblxuZXhwb3J0IGxldCBsb2cgPSB7fVxuXG5PYmplY3Qua2V5cyhzeW1ib2xzKS5tYXAoc3ltYm9sID0+IHtcbiAgbG9nW3N5bWJvbF0gPSByZW5kZXJMb2coc3ltYm9sKVxufSlcblxuZXhwb3J0IGNvbnN0IHdhaXQgPSB0aW1lID0+IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMTAwMCAqIHRpbWUpKVxuXG5leHBvcnQgY29uc3QgcGF0aEV4aXN0cyA9IHBhdGggPT4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gIGZzLmFjY2VzcyhwYXRoLCBlcnIgPT4ge1xuICAgIHJlc29sdmUoIWVycilcbiAgfSlcbn0pXG5cbmV4cG9ydCBjb25zdCBmaW5kUm9vdCA9IChmaWxlbmFtZSwgZGlyKSA9PiB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGZpbmR1cC5zeW5jKGRpciwgZmlsZW5hbWUpXG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIG5vdCBmb3VuZFxuICAgIHJldHVybiBudWxsXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGdldFN1YkRpcnMgPSBwYXJlbnQgPT4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICBmcy5yZWFkZGlyKHBhcmVudCwgKGVyciwgZGF0YSkgPT4ge1xuICAgIGlmIChlcnIpIHJldHVybiByZWplY3QoZXJyKVxuICAgIHJlc29sdmUoZGF0YS5maWx0ZXIoZGlyID0+IGZzLnN0YXRTeW5jKHBhdGguam9pbihwYXJlbnQsIGRpcikpLmlzRGlyZWN0b3J5KCkpKVxuICB9KVxufSlcblxuZXhwb3J0IGNsYXNzIExpc3RlbmVyTWFuYWdlciB7XG4gIGNvbnN0cnVjdG9yIChsaXN0ZW5lcikge1xuICAgIHRoaXMua2V5ID0gMFxuICAgIHRoaXMuY29ubmVjdGlvbnMgPSB7fVxuICAgIHRoaXMubGlzdGVuZXIgPSBsaXN0ZW5lclxuICAgIHRoaXMubGlzdGVuZXIub24oJ2Nvbm5lY3Rpb24nLCBjb25uID0+IHtcbiAgICAgIGNvbnN0IGtleSA9ICsrdGhpcy5rZXlcbiAgICAgIHRoaXMuY29ubmVjdGlvbnNba2V5XSA9IGNvbm5cbiAgICAgIGNvbm4ub24oJ2Nsb3NlJywgKCkgPT4ge1xuICAgICAgICBkZWxldGUgdGhpcy5jb25uZWN0aW9uc1trZXldXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbiAgZGlzcG9zZSAoKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgT2JqZWN0LmtleXModGhpcy5jb25uZWN0aW9ucykuZm9yRWFjaChrZXkgPT4gdGhpcy5jb25uZWN0aW9uc1trZXldLmRlc3Ryb3koKSlcbiAgICAgIGlmICh0aGlzLmxpc3RlbmVyKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXIuY2xvc2UoKCkgPT4gcmVzb2x2ZSgpKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzb2x2ZSgpXG4gICAgICB9XG4gICAgfSlcbiAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy91dGlscy5qcyIsInVuZGVmaW5lZFxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FDaURBO0FBdURBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 10 */,\n/* 11 */\n/* unknown exports provided */\n/* all exports used */\n/*!**********************!*\\\n  !*** external \"ora\" ***!\n  \\**********************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"ora\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJvcmFcIj81NmQzIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIm9yYVwiKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcIm9yYVwiXG4vLyBtb2R1bGUgaWQgPSAxMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 12 */\n/* unknown exports provided */\n/* all exports used */\n/*!*********************************!*\\\n  !*** external \"babel-polyfill\" ***!\n  \\*********************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"babel-polyfill\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJiYWJlbC1wb2x5ZmlsbFwiP2QwZDYiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiYmFiZWwtcG9seWZpbGxcIik7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJiYWJlbC1wb2x5ZmlsbFwiXG4vLyBtb2R1bGUgaWQgPSAxMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 13 */\n/* unknown exports provided */\n/* all exports used */\n/*!****************************************!*\\\n  !*** ./utils/InterpolateHtmlPlugin.js ***!\n  \\****************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"/**\\n * Copyright (c) 2015-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n */// This Webpack plugin lets us interpolate custom variables into `index.html`.\\n// Usage: `new InterpolateHtmlPlugin({ 'MY_VARIABLE': 42 })`\\n// Then, you can use %MY_VARIABLE% in your `index.html`.\\n// It works in tandem with HtmlWebpackPlugin.\\n// Learn more about creating plugins like this:\\n// https://github.com/ampedandwired/html-webpack-plugin#events\\n'use strict';function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\\\"Cannot call a class as a function\\\");}}var escapeStringRegexp=__webpack_require__(/*! escape-string-regexp */ 6);var InterpolateHtmlPlugin=function(){function InterpolateHtmlPlugin(replacements){_classCallCheck(this,InterpolateHtmlPlugin);this.replacements=replacements;}InterpolateHtmlPlugin.prototype.apply=function apply(compiler){var _this=this;compiler.plugin('compilation',function(compilation){compilation.plugin('html-webpack-plugin-before-html-processing',function(data,callback){// Run HTML through a series of user-specified string replacements.\\nObject.keys(_this.replacements).forEach(function(key){var value=_this.replacements[key];data.html=data.html.replace(new RegExp('%'+escapeStringRegexp(key)+'%','g'),value);});callback(null,data);});});};return InterpolateHtmlPlugin;}();module.exports=InterpolateHtmlPlugin;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3V0aWxzL0ludGVycG9sYXRlSHRtbFBsdWdpbi5qcz9iNGY4Iiwid2VicGFjazovLy8/ZDQxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cblxuLy8gVGhpcyBXZWJwYWNrIHBsdWdpbiBsZXRzIHVzIGludGVycG9sYXRlIGN1c3RvbSB2YXJpYWJsZXMgaW50byBgaW5kZXguaHRtbGAuXG4vLyBVc2FnZTogYG5ldyBJbnRlcnBvbGF0ZUh0bWxQbHVnaW4oeyAnTVlfVkFSSUFCTEUnOiA0MiB9KWBcbi8vIFRoZW4sIHlvdSBjYW4gdXNlICVNWV9WQVJJQUJMRSUgaW4geW91ciBgaW5kZXguaHRtbGAuXG5cbi8vIEl0IHdvcmtzIGluIHRhbmRlbSB3aXRoIEh0bWxXZWJwYWNrUGx1Z2luLlxuLy8gTGVhcm4gbW9yZSBhYm91dCBjcmVhdGluZyBwbHVnaW5zIGxpa2UgdGhpczpcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbXBlZGFuZHdpcmVkL2h0bWwtd2VicGFjay1wbHVnaW4jZXZlbnRzXG5cbid1c2Ugc3RyaWN0JztcbmNvbnN0IGVzY2FwZVN0cmluZ1JlZ2V4cCA9IHJlcXVpcmUoJ2VzY2FwZS1zdHJpbmctcmVnZXhwJyk7XG5cbmNsYXNzIEludGVycG9sYXRlSHRtbFBsdWdpbiB7XG4gIGNvbnN0cnVjdG9yKHJlcGxhY2VtZW50cykge1xuICAgIHRoaXMucmVwbGFjZW1lbnRzID0gcmVwbGFjZW1lbnRzO1xuICB9XG5cbiAgYXBwbHkoY29tcGlsZXIpIHtcbiAgICBjb21waWxlci5wbHVnaW4oJ2NvbXBpbGF0aW9uJywgY29tcGlsYXRpb24gPT4ge1xuICAgICAgY29tcGlsYXRpb24ucGx1Z2luKCdodG1sLXdlYnBhY2stcGx1Z2luLWJlZm9yZS1odG1sLXByb2Nlc3NpbmcnLFxuICAgICAgICAoZGF0YSwgY2FsbGJhY2spID0+IHtcbiAgICAgICAgICAvLyBSdW4gSFRNTCB0aHJvdWdoIGEgc2VyaWVzIG9mIHVzZXItc3BlY2lmaWVkIHN0cmluZyByZXBsYWNlbWVudHMuXG4gICAgICAgICAgT2JqZWN0LmtleXModGhpcy5yZXBsYWNlbWVudHMpLmZvckVhY2goa2V5ID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5yZXBsYWNlbWVudHNba2V5XTtcbiAgICAgICAgICAgIGRhdGEuaHRtbCA9IGRhdGEuaHRtbC5yZXBsYWNlKFxuICAgICAgICAgICAgICBuZXcgUmVnRXhwKCclJyArIGVzY2FwZVN0cmluZ1JlZ2V4cChrZXkpICsgJyUnLCAnZycpLFxuICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBjYWxsYmFjayhudWxsLCBkYXRhKTtcbiAgICAgICAgfVxuICAgICAgKTtcbiAgICB9KTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEludGVycG9sYXRlSHRtbFBsdWdpbjtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvdXRpbHMvSW50ZXJwb2xhdGVIdG1sUGx1Z2luLmpzIiwidW5kZWZpbmVkXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vICJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7QUFTQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQ2FBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 14 */\n/* unknown exports provided */\n/* all exports used */\n/*!************************************************!*\\\n  !*** ./utils/WatchMissingNodeModulesPlugin.js ***!\n  \\************************************************/\n/***/ function(module, exports) {\n\n\"use strict\";\neval(\"/**\\n * Copyright (c) 2015-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n */// This Webpack plugin ensures `npm install <library>` forces a project rebuild.\\n// We’re not sure why this isn't Webpack's default behavior.\\n// See https://github.com/facebookincubator/create-react-app/issues/186.\\n'use strict';function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\\\"Cannot call a class as a function\\\");}}var WatchMissingNodeModulesPlugin=function(){function WatchMissingNodeModulesPlugin(nodeModulesPath){_classCallCheck(this,WatchMissingNodeModulesPlugin);this.nodeModulesPath=nodeModulesPath;}WatchMissingNodeModulesPlugin.prototype.apply=function apply(compiler){var _this=this;compiler.plugin('emit',function(compilation,callback){var missingDeps=compilation.missingDependencies;var nodeModulesPath=_this.nodeModulesPath;// If any missing files are expected to appear in node_modules...\\nif(missingDeps.some(function(file){return file.indexOf(nodeModulesPath)!==-1;})){// ...tell webpack to watch node_modules recursively until they appear.\\ncompilation.contextDependencies.push(nodeModulesPath);}callback();});};return WatchMissingNodeModulesPlugin;}();module.exports=WatchMissingNodeModulesPlugin;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3V0aWxzL1dhdGNoTWlzc2luZ05vZGVNb2R1bGVzUGx1Z2luLmpzP2Y3MDUiLCJ3ZWJwYWNrOi8vLz9kNDFkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG4vLyBUaGlzIFdlYnBhY2sgcGx1Z2luIGVuc3VyZXMgYG5wbSBpbnN0YWxsIDxsaWJyYXJ5PmAgZm9yY2VzIGEgcHJvamVjdCByZWJ1aWxkLlxuLy8gV2XigJlyZSBub3Qgc3VyZSB3aHkgdGhpcyBpc24ndCBXZWJwYWNrJ3MgZGVmYXVsdCBiZWhhdmlvci5cbi8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2tpbmN1YmF0b3IvY3JlYXRlLXJlYWN0LWFwcC9pc3N1ZXMvMTg2LlxuXG4ndXNlIHN0cmljdCc7XG5cbmNsYXNzIFdhdGNoTWlzc2luZ05vZGVNb2R1bGVzUGx1Z2luIHtcbiAgY29uc3RydWN0b3Iobm9kZU1vZHVsZXNQYXRoKSB7XG4gICAgdGhpcy5ub2RlTW9kdWxlc1BhdGggPSBub2RlTW9kdWxlc1BhdGg7XG4gIH1cblxuICBhcHBseShjb21waWxlcikge1xuICAgIGNvbXBpbGVyLnBsdWdpbignZW1pdCcsIChjb21waWxhdGlvbiwgY2FsbGJhY2spID0+IHtcbiAgICAgIHZhciBtaXNzaW5nRGVwcyA9IGNvbXBpbGF0aW9uLm1pc3NpbmdEZXBlbmRlbmNpZXM7XG4gICAgICB2YXIgbm9kZU1vZHVsZXNQYXRoID0gdGhpcy5ub2RlTW9kdWxlc1BhdGg7XG5cbiAgICAgIC8vIElmIGFueSBtaXNzaW5nIGZpbGVzIGFyZSBleHBlY3RlZCB0byBhcHBlYXIgaW4gbm9kZV9tb2R1bGVzLi4uXG4gICAgICBpZiAobWlzc2luZ0RlcHMuc29tZShmaWxlID0+IGZpbGUuaW5kZXhPZihub2RlTW9kdWxlc1BhdGgpICE9PSAtMSkpIHtcbiAgICAgICAgLy8gLi4udGVsbCB3ZWJwYWNrIHRvIHdhdGNoIG5vZGVfbW9kdWxlcyByZWN1cnNpdmVseSB1bnRpbCB0aGV5IGFwcGVhci5cbiAgICAgICAgY29tcGlsYXRpb24uY29udGV4dERlcGVuZGVuY2llcy5wdXNoKG5vZGVNb2R1bGVzUGF0aCk7XG4gICAgICB9XG5cbiAgICAgIGNhbGxiYWNrKCk7XG4gICAgfSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBXYXRjaE1pc3NpbmdOb2RlTW9kdWxlc1BsdWdpbjtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvdXRpbHMvV2F0Y2hNaXNzaW5nTm9kZU1vZHVsZXNQbHVnaW4uanMiLCJ1bmRlZmluZWRcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztBQVNBO0FBQ0E7QUFDQTtBQUVBO0FDYUE7QUFFQSIsInNvdXJjZVJvb3QiOiIifQ==\");\n\n/***/ },\n/* 15 */,\n/* 16 */,\n/* 17 */\n/* unknown exports provided */\n/* all exports used */\n/*!********************************!*\\\n  !*** external \"child_process\" ***!\n  \\********************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"child_process\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJjaGlsZF9wcm9jZXNzXCI/NDMwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJjaGlsZF9wcm9jZXNzXCIpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwiY2hpbGRfcHJvY2Vzc1wiXG4vLyBtb2R1bGUgaWQgPSAxN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 18 */\n/* unknown exports provided */\n/* all exports used */\n/*!****************************!*\\\n  !*** external \"commander\" ***!\n  \\****************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"commander\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJjb21tYW5kZXJcIj83NTczIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImNvbW1hbmRlclwiKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcImNvbW1hbmRlclwiXG4vLyBtb2R1bGUgaWQgPSAxOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 19 */\n/* unknown exports provided */\n/* all exports used */\n/*!******************************!*\\\n  !*** external \"detect-port\" ***!\n  \\******************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"detect-port\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJkZXRlY3QtcG9ydFwiPzhiNGEiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZGV0ZWN0LXBvcnRcIik7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJkZXRlY3QtcG9ydFwiXG4vLyBtb2R1bGUgaWQgPSAxOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 20 */\n/* unknown exports provided */\n/* all exports used */\n/*!************************!*\\\n  !*** external \"execa\" ***!\n  \\************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"execa\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJleGVjYVwiP2IwZTEiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZXhlY2FcIik7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJleGVjYVwiXG4vLyBtb2R1bGUgaWQgPSAyMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 21 */\n/* unknown exports provided */\n/* all exports used */\n/*!*************************!*\\\n  !*** external \"findup\" ***!\n  \\*************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"findup\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJmaW5kdXBcIj85YzViIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImZpbmR1cFwiKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcImZpbmR1cFwiXG4vLyBtb2R1bGUgaWQgPSAyMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 22 */\n/* unknown exports provided */\n/* all exports used */\n/*!***************************!*\\\n  !*** external \"inquirer\" ***!\n  \\***************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"inquirer\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJpbnF1aXJlclwiP2M0MmYiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiaW5xdWlyZXJcIik7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJpbnF1aXJlclwiXG4vLyBtb2R1bGUgaWQgPSAyMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 23 */\n/* unknown exports provided */\n/* all exports used */\n/*!************************!*\\\n  !*** external \"kcors\" ***!\n  \\************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"kcors\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJrY29yc1wiPzAxZmIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwia2NvcnNcIik7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJrY29yc1wiXG4vLyBtb2R1bGUgaWQgPSAyM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 24 */\n/* unknown exports provided */\n/* all exports used */\n/*!**********************!*\\\n  !*** external \"koa\" ***!\n  \\**********************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"koa\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJrb2FcIj9iMzU1Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImtvYVwiKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcImtvYVwiXG4vLyBtb2R1bGUgaWQgPSAyNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 25 */\n/* unknown exports provided */\n/* all exports used */\n/*!*********************************!*\\\n  !*** external \"koa-bodyparser\" ***!\n  \\*********************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"koa-bodyparser\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJrb2EtYm9keXBhcnNlclwiPzY2ZTYiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwia29hLWJvZHlwYXJzZXJcIik7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJrb2EtYm9keXBhcnNlclwiXG4vLyBtb2R1bGUgaWQgPSAyNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 26 */\n/* unknown exports provided */\n/* all exports used */\n/*!****************************!*\\\n  !*** external \"koa-jsonp\" ***!\n  \\****************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"koa-jsonp\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJrb2EtanNvbnBcIj9lMTBkIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImtvYS1qc29ucFwiKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcImtvYS1qc29ucFwiXG4vLyBtb2R1bGUgaWQgPSAyNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 27 */\n/* unknown exports provided */\n/* all exports used */\n/*!*****************************!*\\\n  !*** external \"koa-logger\" ***!\n  \\*****************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"koa-logger\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJrb2EtbG9nZ2VyXCI/NDUwYSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJrb2EtbG9nZ2VyXCIpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwia29hLWxvZ2dlclwiXG4vLyBtb2R1bGUgaWQgPSAyN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 28 */\n/* unknown exports provided */\n/* all exports used */\n/*!*****************************!*\\\n  !*** external \"koa-router\" ***!\n  \\*****************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"koa-router\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJrb2Etcm91dGVyXCI/YTMzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJrb2Etcm91dGVyXCIpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwia29hLXJvdXRlclwiXG4vLyBtb2R1bGUgaWQgPSAyOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 29 */,\n/* 30 */\n/* unknown exports provided */\n/* all exports used */\n/*!**********************!*\\\n  !*** external \"opn\" ***!\n  \\**********************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"opn\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJvcG5cIj82MDBmIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIm9wblwiKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcIm9wblwiXG4vLyBtb2R1bGUgaWQgPSAzMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 31 */\n/* unknown exports provided */\n/* all exports used */\n/*!**************************!*\\\n  !*** external \"request\" ***!\n  \\**************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"request\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZXF1ZXN0XCI/NDYzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZXF1ZXN0XCIpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwicmVxdWVzdFwiXG4vLyBtb2R1bGUgaWQgPSAzMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 32 */\n/* unknown exports provided */\n/* all exports used */\n/*!*************************!*\\\n  !*** external \"semver\" ***!\n  \\*************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"semver\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJzZW12ZXJcIj9lNjU4Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInNlbXZlclwiKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcInNlbXZlclwiXG4vLyBtb2R1bGUgaWQgPSAzMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 33 */\n/* unknown exports provided */\n/* all exports used */\n/*!************************!*\\\n  !*** external \"updtr\" ***!\n  \\************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"updtr\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJ1cGR0clwiP2JmZDMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwidXBkdHJcIik7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJ1cGR0clwiXG4vLyBtb2R1bGUgaWQgPSAzM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 34 */\n/* unknown exports provided */\n/* all exports used */\n/*!*************************************!*\\\n  !*** external \"webpack-dev-server\" ***!\n  \\*************************************/\n/***/ function(module, exports) {\n\neval(\"module.exports = require(\\\"webpack-dev-server\\\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJ3ZWJwYWNrLWRldi1zZXJ2ZXJcIj8xYmVhIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIndlYnBhY2stZGV2LXNlcnZlclwiKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcIndlYnBhY2stZGV2LXNlcnZlclwiXG4vLyBtb2R1bGUgaWQgPSAzNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */,\n/* 39 */\n/* unknown exports provided */\n/* all exports used */\n/*!**************************!*\\\n  !*** ./dev/devServer.js ***!\n  \\**************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"'use strict';Object.defineProperty(exports,\\\"__esModule\\\",{value:true});var _koa=__webpack_require__(/*! koa */ 24);var _koa2=_interopRequireDefault(_koa);var _koaBodyparser=__webpack_require__(/*! koa-bodyparser */ 25);var _koaBodyparser2=_interopRequireDefault(_koaBodyparser);var _koaJsonp=__webpack_require__(/*! koa-jsonp */ 26);var _koaJsonp2=_interopRequireDefault(_koaJsonp);var _kcors=__webpack_require__(/*! kcors */ 23);var _kcors2=_interopRequireDefault(_kcors);var _koaLogger=__webpack_require__(/*! koa-logger */ 27);var _koaLogger2=_interopRequireDefault(_koaLogger);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var app=new _koa2.default();// import cors from 'koa-cors'\\napp.proxy=true;app.use((0,_koaLogger2.default)());// TODO: wait for this: https://github.com/koajs/cors/pull/20\\napp.use(function(ctx,next){ctx.set('Access-Control-Allow-Origin','*');ctx.set('Access-Control-Allow-Methods','GET,HEAD,PUT,POST,DELETE');ctx.set('Access-Control-Allow-Credentials','true');return next();});app.use((0,_kcors2.default)({origin:'*'}));app.use((0,_koaJsonp2.default)());app.use((0,_koaBodyparser2.default)({onerror:function onerror(err,ctx){console.log(err);ctx.throw('body parse error',422);}}));exports.default=app;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2Rldi9kZXZTZXJ2ZXIuanM/ZDQ3MyIsIndlYnBhY2s6Ly8vP2Q0MWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEtvYSBmcm9tICdrb2EnXG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdrb2EtYm9keXBhcnNlcidcbmltcG9ydCBqc29ucCBmcm9tICdrb2EtanNvbnAnXG5pbXBvcnQgY29ycyBmcm9tICdrY29ycydcbi8vIGltcG9ydCBjb3JzIGZyb20gJ2tvYS1jb3JzJ1xuaW1wb3J0IGxvZ2dlciBmcm9tICdrb2EtbG9nZ2VyJ1xuXG5jb25zdCBhcHAgPSBuZXcgS29hKClcbmFwcC5wcm94eSA9IHRydWVcbmFwcC51c2UobG9nZ2VyKCkpXG5cbi8vIFRPRE86IHdhaXQgZm9yIHRoaXM6IGh0dHBzOi8vZ2l0aHViLmNvbS9rb2Fqcy9jb3JzL3B1bGwvMjBcbmFwcC51c2UoKGN0eCwgbmV4dCkgPT4ge1xuICBjdHguc2V0KCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nLCAnKicpXG4gIGN0eC5zZXQoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnLCAnR0VULEhFQUQsUFVULFBPU1QsREVMRVRFJylcbiAgY3R4LnNldCgnQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHMnLCAndHJ1ZScpXG4gIHJldHVybiBuZXh0KClcbn0pXG5hcHAudXNlKGNvcnMoe1xuICBvcmlnaW46ICcqJ1xufSkpXG5hcHAudXNlKGpzb25wKCkpXG5hcHAudXNlKGJvZHlQYXJzZXIoe1xuICBvbmVycm9yOiAoZXJyLCBjdHgpID0+IHtcbiAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgY3R4LnRocm93KCdib2R5IHBhcnNlIGVycm9yJywgNDIyKVxuICB9XG59KSlcblxuZXhwb3J0IGRlZmF1bHQgYXBwXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2Rldi9kZXZTZXJ2ZXIuanMiLCJ1bmRlZmluZWRcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gIl0sIm1hcHBpbmdzIjoiQUFBQTtBQVFBO0FDSUEiLCJzb3VyY2VSb290IjoiIn0=\");\n\n/***/ },\n/* 40 */\n/* unknown exports provided */\n/* all exports used */\n/*!***************************!*\\\n  !*** ./dev/mockServer.js ***!\n  \\***************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"'use strict';Object.defineProperty(exports,\\\"__esModule\\\",{value:true});var _koaRouter=__webpack_require__(/*! koa-router */ 28);var _koaRouter2=_interopRequireDefault(_koaRouter);var _getMockRoutes=__webpack_require__(/*! ./getMockRoutes.noparse */ 59);var _getMockRoutes2=_interopRequireDefault(_getMockRoutes);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}// default\\nexports.default=function(app){var router=new _koaRouter2.default();var routes=(0,_getMockRoutes2.default)(app.context.cwd);routes.map(function(items){items.map(function(config){var _config$method=config.method;var method=_config$method===undefined?'get':_config$method;var _config$route=config.route;var route=_config$route===undefined?'':_config$route;var _config$handler=config.handler;var handler=_config$handler===undefined?{}:_config$handler;router[method.toLowerCase()](route,typeof handler==='function'?handler:function(ctx,next){ctx.body=handler;});app.use(router.routes()).use(router.allowedMethods());});});};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2Rldi9tb2NrU2VydmVyLmpzP2NkODkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZGVmYXVsdFxuaW1wb3J0IFJvdXRlciBmcm9tICdrb2Etcm91dGVyJ1xuaW1wb3J0IGdldE1vY2tSb3V0ZXMgZnJvbSAnLi9nZXRNb2NrUm91dGVzLm5vcGFyc2UnXG5cbmV4cG9ydCBkZWZhdWx0IGFwcCA9PiB7XG4gIGNvbnN0IHJvdXRlciA9IG5ldyBSb3V0ZXIoKVxuICBjb25zdCByb3V0ZXMgPSBnZXRNb2NrUm91dGVzKGFwcC5jb250ZXh0LmN3ZClcbiAgcm91dGVzLm1hcChpdGVtcyA9PiB7XG4gICAgaXRlbXMubWFwKGNvbmZpZyA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIG1ldGhvZCA9ICdnZXQnLFxuICAgICAgICByb3V0ZSA9ICcnLFxuICAgICAgICBoYW5kbGVyID0ge31cbiAgICAgIH0gPSBjb25maWdcblxuICAgICAgcm91dGVyW21ldGhvZC50b0xvd2VyQ2FzZSgpXShyb3V0ZSwgdHlwZW9mIGhhbmRsZXIgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBoYW5kbGVyXG4gICAgICAgIDogKGN0eCwgbmV4dCkgPT4ge1xuICAgICAgICAgIGN0eC5ib2R5ID0gaGFuZGxlclxuICAgICAgICB9XG4gICAgICApXG4gICAgICBhcHBcbiAgICAgICAgLnVzZShyb3V0ZXIucm91dGVzKCkpXG4gICAgICAgIC51c2Uocm91dGVyLmFsbG93ZWRNZXRob2RzKCkpXG4gICAgfSlcbiAgfSlcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvZGV2L21vY2tTZXJ2ZXIuanMiXSwibWFwcGluZ3MiOiJBQUNBO0FBR0EiLCJzb3VyY2VSb290IjoiIn0=\");\n\n/***/ },\n/* 41 */,\n/* 42 */\n/* unknown exports provided */\n/* all exports used */\n/*!****************************!*\\\n  !*** ./config/getPaths.js ***!\n  \\****************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"'use strict';Object.defineProperty(exports,\\\"__esModule\\\",{value:true});var _path=__webpack_require__(/*! path */ 0);var _path2=_interopRequireDefault(_path);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}// import fs from 'fs'\\nexports.default=function(projectRootPath){var resolveApp=function resolveApp(relativePath){return _path2.default.resolve(projectRootPath,relativePath);};var nodePaths=(process.env.NODE_PATH||'').split(process.platform==='win32'?';':':').filter(Boolean).map(resolveApp);return{appBuild:resolveApp('build'),appPublic:resolveApp('public'),appHtml:resolveApp('public/index.html'),appIndexJs:resolveApp('src/index.js'),appPackageJson:resolveApp('package.json'),appSrc:resolveApp('src'),testsSetup:resolveApp('src/setupTests.js'),appNodeModules:resolveApp('node_modules'),ownNodeModules:resolveApp('node_modules'),nodePaths:nodePaths};};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbmZpZy9nZXRQYXRocy5qcz8xYzYyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXRoIGZyb20gJ3BhdGgnXG4vLyBpbXBvcnQgZnMgZnJvbSAnZnMnXG5cbmV4cG9ydCBkZWZhdWx0IHByb2plY3RSb290UGF0aCA9PiB7XG4gIGNvbnN0IHJlc29sdmVBcHAgPSByZWxhdGl2ZVBhdGggPT4gcGF0aC5yZXNvbHZlKHByb2plY3RSb290UGF0aCwgcmVsYXRpdmVQYXRoKVxuICBjb25zdCBub2RlUGF0aHMgPSAocHJvY2Vzcy5lbnYuTk9ERV9QQVRIIHx8ICcnKVxuICAgIC5zcGxpdChwcm9jZXNzLnBsYXRmb3JtID09PSAnd2luMzInID8gJzsnIDogJzonKVxuICAgIC5maWx0ZXIoQm9vbGVhbilcbiAgICAubWFwKHJlc29sdmVBcHApXG4gIHJldHVybiB7XG4gICAgYXBwQnVpbGQ6IHJlc29sdmVBcHAoJ2J1aWxkJyksXG4gICAgYXBwUHVibGljOiByZXNvbHZlQXBwKCdwdWJsaWMnKSxcbiAgICBhcHBIdG1sOiByZXNvbHZlQXBwKCdwdWJsaWMvaW5kZXguaHRtbCcpLFxuICAgIGFwcEluZGV4SnM6IHJlc29sdmVBcHAoJ3NyYy9pbmRleC5qcycpLFxuICAgIGFwcFBhY2thZ2VKc29uOiByZXNvbHZlQXBwKCdwYWNrYWdlLmpzb24nKSxcbiAgICBhcHBTcmM6IHJlc29sdmVBcHAoJ3NyYycpLFxuICAgIHRlc3RzU2V0dXA6IHJlc29sdmVBcHAoJ3NyYy9zZXR1cFRlc3RzLmpzJyksXG4gICAgYXBwTm9kZU1vZHVsZXM6IHJlc29sdmVBcHAoJ25vZGVfbW9kdWxlcycpLFxuICAgIG93bk5vZGVNb2R1bGVzOiByZXNvbHZlQXBwKCdub2RlX21vZHVsZXMnKSxcbiAgICBub2RlUGF0aHM6IG5vZGVQYXRoc1xuICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2NvbmZpZy9nZXRQYXRocy5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFHQSIsInNvdXJjZVJvb3QiOiIifQ==\");\n\n/***/ },\n/* 43 */\n/* unknown exports provided */\n/* all exports used */\n/*!**************************************!*\\\n  !*** ./config/webpack.config.dev.js ***!\n  \\**************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"'use strict';Object.defineProperty(exports,\\\"__esModule\\\",{value:true});var _webpack=__webpack_require__(/*! webpack */ 1);var _webpack2=_interopRequireDefault(_webpack);var _findCacheDir=__webpack_require__(/*! find-cache-dir */ 5);var _findCacheDir2=_interopRequireDefault(_findCacheDir);var _htmlWebpackPlugin=__webpack_require__(/*! html-webpack-plugin */ 2);var _htmlWebpackPlugin2=_interopRequireDefault(_htmlWebpackPlugin);var _caseSensitivePathsWebpackPlugin=__webpack_require__(/*! case-sensitive-paths-webpack-plugin */ 4);var _caseSensitivePathsWebpackPlugin2=_interopRequireDefault(_caseSensitivePathsWebpackPlugin);var _InterpolateHtmlPlugin=__webpack_require__(/*! ../utils/InterpolateHtmlPlugin */ 13);var _InterpolateHtmlPlugin2=_interopRequireDefault(_InterpolateHtmlPlugin);var _WatchMissingNodeModulesPlugin=__webpack_require__(/*! ../utils/WatchMissingNodeModulesPlugin */ 14);var _WatchMissingNodeModulesPlugin2=_interopRequireDefault(_WatchMissingNodeModulesPlugin);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}// console.log(981, path.resolve('fe/utils/webpackHotDevClient'))\\n// console.log(process)\\n// import autoprefixer from 'autoprefixer'\\n// import path from 'path'\\nexports.default=function(paths){return{devtool:'eval',// These are the \\\"entry points\\\" to our application.\\n// This means they will be the \\\"root\\\" imports that are included in JS bundle.\\n// The first two entry points enable \\\"hot\\\" CSS and auto-refreshes for JS.\\nentry:[// Include an alternative client for WebpackDevServer. A client's job is to\\n// connect to WebpackDevServer by a socket and get notified about changes.\\n// When you save a file, the client will either apply hot updates (in case\\n// of CSS changes), or refresh the page (in case of JS changes). When you\\n// make a syntax error, this client will display a syntax error overlay.\\n// Note: instead of the default WebpackDevServer client, we use a custom one\\n// to bring better experience for Create React App users. You can replace\\n// the line below with these two lines if you prefer the stock client:\\n// require.resolve('webpack-dev-server/client') + '?/',\\n// require.resolve('webpack/hot/dev-server'),\\n// require.resolve('../utils/webpackHotDevClient'),\\n// We ship a few polyfills by default:\\n// require.resolve('./polyfills'),\\n// Finally, this is your app's code:\\npaths.appIndexJs// We include the app code last so that if there is a runtime error during\\n// initialization, it doesn't blow up the WebpackDevServer client, and\\n// changing JS code would still trigger a refresh.\\n],output:{// Next line is not used in dev but WebpackDevServer crashes without it:\\npath:paths.appBuild,// Add /* filename */ comments to generated require()s in the output.\\npathinfo:true,// This does not produce a real file. It's just the virtual path that is\\n// served by WebpackDevServer in development. This is the JS bundle\\n// containing code from all our entry points, and the Webpack runtime.\\nfilename:'static/js/bundle.js',// This is the URL that app is served from. We use \\\"/\\\" in development.\\npublicPath:'/'},resolve:{// This allows you to set a fallback for where Webpack should look for modules.\\n// We read `NODE_PATH` environment variable in `paths.js` and pass paths here.\\n// We use `fallback` instead of `root` because we want `node_modules` to \\\"win\\\"\\n// if there any conflicts. This matches Node resolution mechanism.\\n// https://github.com/facebookincubator/create-react-app/issues/253\\n// fallback: paths.nodePaths,\\n// These are the reasonable defaults supported by the Node ecosystem.\\n// We also include JSX as a common component filename extension to support\\n// some tools, although we do not recommend using it, see:\\n// https://github.com/facebookincubator/create-react-app/issues/290\\nextensions:['.js','.json','.jsx'],alias:{// Support React Native Web\\n// https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/\\n'react-native':'react-native-web'}},module:{// First, run the linter.\\n// It's important to do this before Babel processes the JS.\\n// preLoaders: [\\n//   {\\n//     test: /\\\\.(js|jsx)$/,\\n//     loader: 'eslint',\\n//     include: paths.appSrc\\n//   }\\n// ],\\nloaders:[// Process JS with Babel.\\n{test:/\\\\.(js|jsx)$/,include:paths.appSrc,loader:'babel',query:{// This is a feature of `babel-loader` for webpack (not Babel itself).\\n// It enables caching results in ./node_modules/.cache/react-scripts/\\n// directory for faster rebuilds. We use findCacheDir() because of:\\n// https://github.com/facebookincubator/create-react-app/issues/483\\ncacheDirectory:(0,_findCacheDir2.default)({name:'react-scripts'})}},// \\\"postcss\\\" loader applies autoprefixer to our CSS.\\n// \\\"css\\\" loader resolves paths in CSS and adds assets as dependencies.\\n// \\\"style\\\" loader turns CSS into JS modules that inject <style> tags.\\n// In production, we use a plugin to extract that CSS to a file, but\\n// in development \\\"style\\\" loader enables hot editing of CSS.\\n{test:/\\\\.css$/,loader:'style!css'},// JSON is not enabled by default in Webpack but both Node and Browserify\\n// allow it implicitly so we also enable it.\\n{test:/\\\\.json$/,loader:'json'},// \\\"file\\\" loader makes sure those assets get served by WebpackDevServer.\\n// When you `import` an asset, you get its (virtual) filename.\\n// In production, they would get copied to the `build` folder.\\n{test:/\\\\.(ico|jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)(\\\\?.*)?$/,loader:'file',query:{name:'static/media/[name].[hash:8].[ext]'}},// \\\"url\\\" loader works just like \\\"file\\\" loader but it also embeds\\n// assets smaller than specified size as data URLs to avoid requests.\\n{test:/\\\\.(mp4|webm|wav|mp3|m4a|aac|oga)(\\\\?.*)?$/,loader:'url',query:{limit:10000,name:'static/media/[name].[hash:8].[ext]'}}]},// We use PostCSS for autoprefixing only.\\n// postcss: () => [\\n//   autoprefixer({\\n//     browsers: [\\n//       '>1%',\\n//       'last 4 versions',\\n//       'Firefox ESR',\\n//       'not ie < 9' // React doesn't support IE8 anyway\\n//     ]\\n//   })\\n// ],\\nplugins:[// Makes the public URL available as %PUBLIC_URL% in index.html, e.g.:\\n// <link rel=\\\"shortcut icon\\\" href=\\\"%PUBLIC_URL%/favicon.ico\\\">\\n// In development, this will be an empty string.\\nnew _InterpolateHtmlPlugin2.default({PUBLIC_URL:''}),// Generates an `index.html` file with the <script> injected.\\nnew _htmlWebpackPlugin2.default({inject:true,template:paths.appHtml}),// Makes some environment variables available to the JS code, for example:\\n// if (process.env.NODE_ENV === 'development') { ... }. See `./env.js`.\\n// new webpack.DefinePlugin(env),\\n// This is necessary to emit hot updates (currently CSS only):\\nnew _webpack2.default.HotModuleReplacementPlugin(),// Watcher doesn't work well if you mistype casing in a path so we use\\n// a plugin that prints an error when you attempt to do this.\\n// See https://github.com/facebookincubator/create-react-app/issues/240\\nnew _caseSensitivePathsWebpackPlugin2.default(),// If you require a missing module and then `npm install` it, you still have\\n// to restart the development server for Webpack to discover it. This plugin\\n// makes the discovery automatic so you don't have to restart.\\n// See https://github.com/facebookincubator/create-react-app/issues/186\\nnew _WatchMissingNodeModulesPlugin2.default(paths.appNodeModules)],// Some libraries import Node modules but don't use them in the browser.\\n// Tell Webpack to provide empty mocks for them so importing them works.\\nnode:{fs:'empty',net:'empty',tls:'empty'}};};//# sourceMappingURL=data:application/json;charset=utf-8;base64,\");\n\n/***/ },\n/* 44 */,\n/* 45 */\n/* unknown exports provided */\n/* all exports used */\n/*!******************!*\\\n  !*** ./index.js ***!\n  \\******************/\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"'use strict';Object.defineProperty(exports,\\\"__esModule\\\",{value:true});var _path=__webpack_require__(/*! path */ 0);var _path2=_interopRequireDefault(_path);var _commander=__webpack_require__(/*! commander */ 18);var _commander2=_interopRequireDefault(_commander);var _chalk=__webpack_require__(/*! chalk */ 3);var _chalk2=_interopRequireDefault(_chalk);var _utils=__webpack_require__(/*! ./utils */ 9);var _package=__webpack_require__(/*! ../package.json */ 64);var _package2=_interopRequireDefault(_package);var _config=__webpack_require__(/*! ./config */ 58);var _config2=_interopRequireDefault(_config);var _dev=__webpack_require__(/*! ./commands/dev */ 51);var _dev2=_interopRequireDefault(_dev);var _build=__webpack_require__(/*! ./commands/build */ 49);var _build2=_interopRequireDefault(_build);var _init=__webpack_require__(/*! ./commands/init */ 53);var _init2=_interopRequireDefault(_init);var _list=__webpack_require__(/*! ./commands/list */ 54);var _list2=_interopRequireDefault(_list);var _generate=__webpack_require__(/*! ./commands/generate */ 52);var _generate2=_interopRequireDefault(_generate);var _deploy=__webpack_require__(/*! ./commands/deploy */ 50);var _deploy2=_interopRequireDefault(_deploy);var _update=__webpack_require__(/*! ./commands/update */ 56);var _update2=_interopRequireDefault(_update);var _upgrade=__webpack_require__(/*! ./commands/upgrade */ 57);var _upgrade2=_interopRequireDefault(_upgrade);var _start=__webpack_require__(/*! ./commands/start */ 55);var _start2=_interopRequireDefault(_start);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var cwdPath=_path2.default.resolve('.');// var program = require('commander')\\nvar projectRootPath=(0,_utils.findRoot)('fe.config.js',cwdPath)||(0,_utils.findRoot)('fe.config.babel.js',cwdPath);if(!projectRootPath){_utils.log.warning('No '+_chalk2.default.magenta.underline('fe.config.js')+' or '+_chalk2.default.magenta.underline('fe.config.babel.js')+' found, run '+_chalk2.default.magenta.underline('fe init')+' first in your project\\\\'s root folder');projectRootPath=cwdPath;}var version=_package2.default.version;_commander2.default// .command('info <dir> [thing]', 'xxx')\\n// .command('info <dir> [thing]', 'xxx')\\n.version(version||'0.0.1').description('A modern development workflow: '+_chalk2.default.magenta.underline('fe init')+' > '+_chalk2.default.magenta.underline('fe dev')+' > '+_chalk2.default.magenta.underline('fe g route'));// Inject more opts on commander.prototype.opts\\nObject.assign(_commander2.default.opts,{projectRootPath:projectRootPath,version:version,defaultConfig:_config2.default});/*\\nNotice:\\n1. alias === command will cause the action run twice\\n */_commander2.default.command('dev').description('Enter '+_chalk2.default.yellow.underline('development')+' mode, with liveload support').alias('d').option('-p, --port','Add peppers').action(_dev2.default);_commander2.default.command('dd').description('TEST '+_chalk2.default.yellow.underline('development')+' mode, with liveload support').alias('ddd').option('-p, --port','Add peppers').action(_start2.default);_commander2.default.command('build').description(_chalk2.default.green.underline('Build')+' static assets with dependencies').alias('b').option('-w, --watch','Watching mode').action(_build2.default);_commander2.default.command('init [ui]').description('Initiate a project with ['+_chalk2.default.white.underline('empty')+'|'+_chalk2.default.red.underline('cms')+'|'+_chalk2.default.gray.underline('link')+'] ui bolierplate').action(_init2.default);_commander2.default.command('list').description('List the components in '+_chalk2.default.magenta.underline('fe')+'-ecosystem').alias('l').action(_list2.default);_commander2.default.command('generate [thing]').description('Generate ['+_chalk2.default.underline('component')+'|'+_chalk2.default.underline('route')+']').alias('g').action(_generate2.default);_commander2.default.command('deploy [env]').description('Deploy code to spec env').action(_deploy2.default);_commander2.default.command('update').description('Update local outdated modules').alias('up').action(_update2.default);_commander2.default.command('upgrade').description('Upgrade '+_chalk2.default.magenta.underline('fe')+' tool').action(_upgrade2.default.bind(null,version));_commander2.default.on('--help',function(){console.log('  Examples:');console.log('');console.log('    $ fe dev -p 3000');console.log('    $ fe dev -h');console.log('');});_commander2.default.parse(process.argv);if(!_commander2.default.args.length)_commander2.default.help();/*\\nif (!process.argv.slice(2).length) {\\n  commander.outputHelp()\\n}\\n*/exports.default=_commander2.default;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2luZGV4LmpzPzFmZGYiLCJ3ZWJwYWNrOi8vLz9kNDFkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHZhciBwcm9ncmFtID0gcmVxdWlyZSgnY29tbWFuZGVyJylcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnXG5pbXBvcnQgY29tbWFuZGVyIGZyb20gJ2NvbW1hbmRlcidcbmltcG9ydCBjaGFsayBmcm9tICdjaGFsaydcbmltcG9ydCB7XG4gIGxvZyxcbiAgZmluZFJvb3Rcbn0gZnJvbSAnLi91dGlscydcbmltcG9ydCBwa2cgZnJvbSAnLi4vcGFja2FnZS5qc29uJ1xuaW1wb3J0IGRlZmF1bHRDb25maWcgZnJvbSAnLi9jb25maWcnXG5cbmltcG9ydCBkZXYgZnJvbSAnLi9jb21tYW5kcy9kZXYnXG5pbXBvcnQgYnVpbGQgZnJvbSAnLi9jb21tYW5kcy9idWlsZCdcbmltcG9ydCBpbml0IGZyb20gJy4vY29tbWFuZHMvaW5pdCdcbmltcG9ydCBsaXN0IGZyb20gJy4vY29tbWFuZHMvbGlzdCdcbmltcG9ydCBnZW5lcmF0ZSBmcm9tICcuL2NvbW1hbmRzL2dlbmVyYXRlJ1xuaW1wb3J0IGRlcGxveSBmcm9tICcuL2NvbW1hbmRzL2RlcGxveSdcbmltcG9ydCB1cGRhdGUgZnJvbSAnLi9jb21tYW5kcy91cGRhdGUnXG5pbXBvcnQgdXBncmFkZSBmcm9tICcuL2NvbW1hbmRzL3VwZ3JhZGUnXG5cbmltcG9ydCBzdGFydCBmcm9tICcuL2NvbW1hbmRzL3N0YXJ0J1xuXG5jb25zdCBjd2RQYXRoID0gcGF0aC5yZXNvbHZlKCcuJylcbmxldCBwcm9qZWN0Um9vdFBhdGggPSBmaW5kUm9vdCgnZmUuY29uZmlnLmpzJywgY3dkUGF0aCkgfHwgZmluZFJvb3QoJ2ZlLmNvbmZpZy5iYWJlbC5qcycsIGN3ZFBhdGgpXG5cbmlmICghcHJvamVjdFJvb3RQYXRoKSB7XG4gIGxvZy53YXJuaW5nKGBObyAke2NoYWxrLm1hZ2VudGEudW5kZXJsaW5lKCdmZS5jb25maWcuanMnKX0gb3IgJHtjaGFsay5tYWdlbnRhLnVuZGVybGluZSgnZmUuY29uZmlnLmJhYmVsLmpzJyl9IGZvdW5kLCBydW4gJHtjaGFsay5tYWdlbnRhLnVuZGVybGluZSgnZmUgaW5pdCcpfSBmaXJzdCBpbiB5b3VyIHByb2plY3QncyByb290IGZvbGRlcmApXG4gIHByb2plY3RSb290UGF0aCA9IGN3ZFBhdGhcbn1cblxuY29uc3QgdmVyc2lvbiA9IHBrZy52ZXJzaW9uXG5cbmNvbW1hbmRlclxuICAudmVyc2lvbih2ZXJzaW9uIHx8ICcwLjAuMScpXG4gIC5kZXNjcmlwdGlvbihgQSBtb2Rlcm4gZGV2ZWxvcG1lbnQgd29ya2Zsb3c6ICR7Y2hhbGsubWFnZW50YS51bmRlcmxpbmUoJ2ZlIGluaXQnKX0gPiAke2NoYWxrLm1hZ2VudGEudW5kZXJsaW5lKCdmZSBkZXYnKX0gPiAke2NoYWxrLm1hZ2VudGEudW5kZXJsaW5lKCdmZSBnIHJvdXRlJyl9YClcblxuLy8gSW5qZWN0IG1vcmUgb3B0cyBvbiBjb21tYW5kZXIucHJvdG90eXBlLm9wdHNcbk9iamVjdC5hc3NpZ24oY29tbWFuZGVyLm9wdHMsIHtcbiAgcHJvamVjdFJvb3RQYXRoLFxuICB2ZXJzaW9uLFxuICBkZWZhdWx0Q29uZmlnXG59KVxuXG4vKlxuTm90aWNlOlxuMS4gYWxpYXMgPT09IGNvbW1hbmQgd2lsbCBjYXVzZSB0aGUgYWN0aW9uIHJ1biB0d2ljZVxuICovXG5jb21tYW5kZXJcbiAgLy8gLmNvbW1hbmQoJ2luZm8gPGRpcj4gW3RoaW5nXScsICd4eHgnKVxuICAuY29tbWFuZCgnZGV2JylcbiAgLmRlc2NyaXB0aW9uKGBFbnRlciAke2NoYWxrLnllbGxvdy51bmRlcmxpbmUoJ2RldmVsb3BtZW50Jyl9IG1vZGUsIHdpdGggbGl2ZWxvYWQgc3VwcG9ydGApXG4gIC5hbGlhcygnZCcpXG4gIC5vcHRpb24oJy1wLCAtLXBvcnQnLCAnQWRkIHBlcHBlcnMnKVxuICAuYWN0aW9uKGRldilcblxuY29tbWFuZGVyXG4gIC8vIC5jb21tYW5kKCdpbmZvIDxkaXI+IFt0aGluZ10nLCAneHh4JylcbiAgLmNvbW1hbmQoJ2RkJylcbiAgLmRlc2NyaXB0aW9uKGBURVNUICR7Y2hhbGsueWVsbG93LnVuZGVybGluZSgnZGV2ZWxvcG1lbnQnKX0gbW9kZSwgd2l0aCBsaXZlbG9hZCBzdXBwb3J0YClcbiAgLmFsaWFzKCdkZGQnKVxuICAub3B0aW9uKCctcCwgLS1wb3J0JywgJ0FkZCBwZXBwZXJzJylcbiAgLmFjdGlvbihzdGFydClcblxuY29tbWFuZGVyXG4gIC5jb21tYW5kKCdidWlsZCcpXG4gIC5kZXNjcmlwdGlvbihgJHtjaGFsay5ncmVlbi51bmRlcmxpbmUoJ0J1aWxkJyl9IHN0YXRpYyBhc3NldHMgd2l0aCBkZXBlbmRlbmNpZXNgKVxuICAuYWxpYXMoJ2InKVxuICAub3B0aW9uKCctdywgLS13YXRjaCcsICdXYXRjaGluZyBtb2RlJylcbiAgLmFjdGlvbihidWlsZClcblxuY29tbWFuZGVyXG4gIC5jb21tYW5kKCdpbml0IFt1aV0nKVxuICAuZGVzY3JpcHRpb24oYEluaXRpYXRlIGEgcHJvamVjdCB3aXRoIFske2NoYWxrLndoaXRlLnVuZGVybGluZSgnZW1wdHknKX18JHtjaGFsay5yZWQudW5kZXJsaW5lKCdjbXMnKX18JHtjaGFsay5ncmF5LnVuZGVybGluZSgnbGluaycpfV0gdWkgYm9saWVycGxhdGVgKVxuICAuYWN0aW9uKGluaXQpXG5cbmNvbW1hbmRlclxuICAuY29tbWFuZCgnbGlzdCcpXG4gIC5kZXNjcmlwdGlvbihgTGlzdCB0aGUgY29tcG9uZW50cyBpbiAke2NoYWxrLm1hZ2VudGEudW5kZXJsaW5lKCdmZScpfS1lY29zeXN0ZW1gKVxuICAuYWxpYXMoJ2wnKVxuICAuYWN0aW9uKGxpc3QpXG5cbmNvbW1hbmRlclxuICAuY29tbWFuZCgnZ2VuZXJhdGUgW3RoaW5nXScpXG4gIC5kZXNjcmlwdGlvbihgR2VuZXJhdGUgWyR7Y2hhbGsudW5kZXJsaW5lKCdjb21wb25lbnQnKX18JHtjaGFsay51bmRlcmxpbmUoJ3JvdXRlJyl9XWApXG4gIC5hbGlhcygnZycpXG4gIC5hY3Rpb24oZ2VuZXJhdGUpXG5cbmNvbW1hbmRlclxuICAuY29tbWFuZCgnZGVwbG95IFtlbnZdJylcbiAgLmRlc2NyaXB0aW9uKCdEZXBsb3kgY29kZSB0byBzcGVjIGVudicpXG4gIC5hY3Rpb24oZGVwbG95KVxuXG5jb21tYW5kZXJcbiAgLmNvbW1hbmQoJ3VwZGF0ZScpXG4gIC5kZXNjcmlwdGlvbignVXBkYXRlIGxvY2FsIG91dGRhdGVkIG1vZHVsZXMnKVxuICAuYWxpYXMoJ3VwJylcbiAgLmFjdGlvbih1cGRhdGUpXG5cbmNvbW1hbmRlclxuICAuY29tbWFuZCgndXBncmFkZScpXG4gIC5kZXNjcmlwdGlvbihgVXBncmFkZSAke2NoYWxrLm1hZ2VudGEudW5kZXJsaW5lKCdmZScpfSB0b29sYClcbiAgLmFjdGlvbih1cGdyYWRlLmJpbmQobnVsbCwgdmVyc2lvbikpXG5cbmNvbW1hbmRlci5vbignLS1oZWxwJywgZnVuY3Rpb24gKCkge1xuICBjb25zb2xlLmxvZygnICBFeGFtcGxlczonKVxuICBjb25zb2xlLmxvZygnJylcbiAgY29uc29sZS5sb2coJyAgICAkIGZlIGRldiAtcCAzMDAwJylcbiAgY29uc29sZS5sb2coJyAgICAkIGZlIGRldiAtaCcpXG4gIGNvbnNvbGUubG9nKCcnKVxufSlcblxuY29tbWFuZGVyLnBhcnNlKHByb2Nlc3MuYXJndilcblxuaWYgKCFjb21tYW5kZXIuYXJncy5sZW5ndGgpIGNvbW1hbmRlci5oZWxwKClcbi8qXG5pZiAoIXByb2Nlc3MuYXJndi5zbGljZSgyKS5sZW5ndGgpIHtcbiAgY29tbWFuZGVyLm91dHB1dEhlbHAoKVxufVxuKi9cbmV4cG9ydCBkZWZhdWx0IGNvbW1hbmRlclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9pbmRleC5qcyIsInVuZGVmaW5lZFxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAiXSwibWFwcGluZ3MiOiJBQUNBO0FDc0JBO0FBaUNBO0FBeEJBO0FBS0E7OztBQVVBOzs7OyIsInNvdXJjZVJvb3QiOiIifQ==\");\n\n/***/ },\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */\n/* unknown exports provided */\n/* all exports used */\n/*!***************************!*\\\n  !*** ./commands/build.js ***!\n  \\***************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"'use strict';Object.defineProperty(exports,\\\"__esModule\\\",{value:true});var _path=__webpack_require__(/*! path */ 0);var _path2=_interopRequireDefault(_path);var _webpack=__webpack_require__(/*! webpack */ 1);var _webpack2=_interopRequireDefault(_webpack);var _chalk=__webpack_require__(/*! chalk */ 3);var _chalk2=_interopRequireDefault(_chalk);var _utils=__webpack_require__(/*! ../utils */ 9);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\\\"next\\\",value);},function(err){step(\\\"throw\\\",err);});}}return step(\\\"next\\\");});};}var spinner=new _utils.Spinner();exports.default=function(){var _ref=_asyncToGenerator(regeneratorRuntime.mark(function _callee(cmd){var cwd,compiler;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:cwd=cmd.opts.projectRootPath;// Grab the webpack config, from:\\n// 1. global/config/webpack.config.build.js\\n// 2. local/config/webpack.config.build.js\\ncompiler=(0,_webpack2.default)({entry:{'index':[_path2.default.join(cwd,'src/index.js')]},output:{path:_path2.default.join(cwd,'dist'),filename:'[name].js',// publicPath: 'http://localhost:3000/static/'\\npublicPath:''// publicPath: `http://localhost:${port}/`\\n}});spinner.start('running',{text:'Building, root path: '+_chalk2.default.magenta.underline(cwd)});_context.next=5;return(0,_utils.wait)(1);case 5:compiler.run(function(err,stats){spinner.stop();err?_utils.log.error(err):_utils.log.success('Built successed!');});cmd.watch&&compiler.watch({// watch options:\\naggregateTimeout:300,// wait so long for more changes\\npoll:true// use polling instead of native watchers\\n// pass a number to set the polling interval\\n},function(err,stats){err?_utils.log.error(err):_utils.log.success('Built successed!');});case 7:case'end':return _context.stop();}}},_callee,undefined);}));return function(_x){return _ref.apply(this,arguments);};}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbW1hbmRzL2J1aWxkLmpzP2RjMjEiLCJ3ZWJwYWNrOi8vLz9kNDFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXRoIGZyb20gJ3BhdGgnXG5pbXBvcnQgd2VicGFjayBmcm9tICd3ZWJwYWNrJ1xuaW1wb3J0IGNoYWxrIGZyb20gJ2NoYWxrJ1xuaW1wb3J0IHtcbiAgbG9nLFxuICB3YWl0LFxuICBTcGlubmVyXG59IGZyb20gJy4uL3V0aWxzJ1xuXG5jb25zdCBzcGlubmVyID0gbmV3IFNwaW5uZXIoKVxuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBjbWQgPT4ge1xuICBjb25zdCBjd2QgPSBjbWQub3B0cy5wcm9qZWN0Um9vdFBhdGhcblxuICAvLyBHcmFiIHRoZSB3ZWJwYWNrIGNvbmZpZywgZnJvbTpcbiAgLy8gMS4gZ2xvYmFsL2NvbmZpZy93ZWJwYWNrLmNvbmZpZy5idWlsZC5qc1xuICAvLyAyLiBsb2NhbC9jb25maWcvd2VicGFjay5jb25maWcuYnVpbGQuanNcbiAgY29uc3QgY29tcGlsZXIgPSB3ZWJwYWNrKHtcbiAgICBlbnRyeToge1xuICAgICAgJ2luZGV4JzogW3BhdGguam9pbihjd2QsICdzcmMvaW5kZXguanMnKV1cbiAgICB9LFxuICAgIG91dHB1dDoge1xuICAgICAgcGF0aDogcGF0aC5qb2luKGN3ZCwgJ2Rpc3QnKSxcbiAgICAgIGZpbGVuYW1lOiAnW25hbWVdLmpzJyxcbiAgICAgIC8vIHB1YmxpY1BhdGg6ICdodHRwOi8vbG9jYWxob3N0OjMwMDAvc3RhdGljLydcbiAgICAgIHB1YmxpY1BhdGg6ICcnXG4gICAgICAvLyBwdWJsaWNQYXRoOiBgaHR0cDovL2xvY2FsaG9zdDoke3BvcnR9L2BcbiAgICB9XG4gIH0pXG5cbiAgc3Bpbm5lci5zdGFydCgncnVubmluZycsIHtcbiAgICB0ZXh0OiBgQnVpbGRpbmcsIHJvb3QgcGF0aDogJHtjaGFsay5tYWdlbnRhLnVuZGVybGluZShjd2QpfWBcbiAgfSlcblxuICBhd2FpdCB3YWl0KDEpXG5cbiAgY29tcGlsZXIucnVuKChlcnIsIHN0YXRzKSA9PiB7XG4gICAgc3Bpbm5lci5zdG9wKClcbiAgICBlcnJcbiAgICAgID8gbG9nLmVycm9yKGVycilcbiAgICAgIDogbG9nLnN1Y2Nlc3MoJ0J1aWx0IHN1Y2Nlc3NlZCEnKVxuICB9KVxuXG4gIGNtZC53YXRjaCAmJiBjb21waWxlci53YXRjaCh7IC8vIHdhdGNoIG9wdGlvbnM6XG4gICAgYWdncmVnYXRlVGltZW91dDogMzAwLCAvLyB3YWl0IHNvIGxvbmcgZm9yIG1vcmUgY2hhbmdlc1xuICAgIHBvbGw6IHRydWUgLy8gdXNlIHBvbGxpbmcgaW5zdGVhZCBvZiBuYXRpdmUgd2F0Y2hlcnNcbiAgICAvLyBwYXNzIGEgbnVtYmVyIHRvIHNldCB0aGUgcG9sbGluZyBpbnRlcnZhbFxuICB9LCAoZXJyLCBzdGF0cykgPT4ge1xuICAgIGVyclxuICAgICAgPyBsb2cuZXJyb3IoZXJyKVxuICAgICAgOiBsb2cuc3VjY2VzcygnQnVpbHQgc3VjY2Vzc2VkIScpXG4gIH0pXG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2NvbW1hbmRzL2J1aWxkLmpzIiwidW5kZWZpbmVkXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vICJdLCJtYXBwaW5ncyI6IkFBQUE7QUNlQTtBQUNBO0FBQ0E7QUFRQTtBQUpBO0FBdUJBO0FBQ0E7QUFDQTtBQUhBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 50 */\n/* unknown exports provided */\n/* all exports used */\n/*!****************************!*\\\n  !*** ./commands/deploy.js ***!\n  \\****************************/\n/***/ function(module, exports) {\n\n\"use strict\";\neval(\"'use strict';Object.defineProperty(exports,\\\"__esModule\\\",{value:true});exports.default=function(cmd){console.log('deploy');};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbW1hbmRzL2RlcGxveS5qcz9lOTAwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IChjbWQpID0+IHtcbiAgY29uc29sZS5sb2coJ2RlcGxveScpXG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2NvbW1hbmRzL2RlcGxveS5qcyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\");\n\n/***/ },\n/* 51 */\n/* unknown exports provided */\n/* all exports used */\n/*!*************************!*\\\n  !*** ./commands/dev.js ***!\n  \\*************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"'use strict';Object.defineProperty(exports,\\\"__esModule\\\",{value:true});var _path=__webpack_require__(/*! path */ 0);var _path2=_interopRequireDefault(_path);var _chokidar=__webpack_require__(/*! chokidar */ 7);var _chokidar2=_interopRequireDefault(_chokidar);var _utils=__webpack_require__(/*! ../utils */ 9);__webpack_require__(/*! ../dev/ */ 60);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\\\"next\\\",value);},function(err){step(\\\"throw\\\",err);});}}return step(\\\"next\\\");});};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\\\"Cannot call a class as a function\\\");}}// import webpack from 'webpack'\\nvar spinner=new _utils.Spinner();/*\\nwatch\\n\\nmock\\n\\nhotload\\n\\ncomplile\\n */var PORT=3001;var Server=function(){function Server(cwd,mockPath){_classCallCheck(this,Server);this.listenerManager=null;this.mockPath=mockPath;this.cwd=cwd;}Server.prototype.restart=function restart(){delete __webpack_require__.c[/*require.resolve*/(/*! ../dev/devServer */ 39)];delete __webpack_require__.c[/*require.resolve*/(/*! ../dev/mockServer */ 40)];/* Object.keys(require.cache).forEach(modulePath => {\\n      // delete require.cache[modulePath]\\n\\n      // console.log(this.mockPath)\\n      // console.log(modulePath)\\n      if (~modulePath.indexOf(this.mockPath)) {\\n        console.log(modulePath)\\n        delete require.cache[modulePath]\\n      }\\n\\n      if (~modulePath.indexOf('devServer')) {\\n        delete require.cache[modulePath]\\n      }\\n\\n      if (~modulePath.indexOf('mockServer')) {\\n        delete require.cache[modulePath]\\n      }\\n    })*/this.stop();this.start();};Server.prototype.start=function start(cb){var _this=this;var devServer=__webpack_require__(/*! ../dev/devServer */ 39).default;var mockServer=__webpack_require__(/*! ../dev/mockServer */ 40).default;devServer.context.cwd=this.cwd;mockServer(devServer);var server=devServer.listen(PORT,function(){cb&&cb.call(_this);// console.log(`Server started on ${PORT}`)\\n});this.listenerManager=new _utils.ListenerManager(server);};Server.prototype.stop=function stop(){this.listenerManager&&this.listenerManager.dispose();};return Server;}();exports.default=function(){var _ref=_asyncToGenerator(regeneratorRuntime.mark(function _callee(cmd){var mockPath,server,watcher;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:/*  mockServer(devServer)\\n  let server = devServer.listen(PORT, () => {\\n    console.log(`Server started on ${PORT}`)\\n  })\\n  let listenerManager = new ListenerManager(server)\\n\\n  // await wait(4)*/spinner.start('wait');mockPath=_path2.default.join(cmd.opts.projectRootPath,'MOCK');server=new Server(cmd.opts.projectRootPath,mockPath);server.start(function(){spinner.start('done',{text:'MockServer: http://127.0.0.1:'+PORT});});// watch\\nwatcher=_chokidar2.default.watch(mockPath);watcher.on('ready',function(){watcher.on('add',server.restart.bind(server)).on('addDir',server.restart.bind(server)).on('change',server.restart.bind(server)).on('unlink',server.restart.bind(server)).on('unlinkDir',server.restart.bind(server));});// spinner.start('running')\\n// await wait(2)\\n// spinner.start('done')\\n// await wait(2)\\n// spinner.start('error')\\n// await wait(2)\\ncase 6:case'end':return _context.stop();}}},_callee,undefined);}));return function(_x){return _ref.apply(this,arguments);};}();/*\\nvar WebpackDevServer = require(\\\"webpack-dev-server\\\");\\nvar webpack = require(\\\"webpack\\\");\\n\\nvar compiler = webpack({\\n  // configuration\\n});\\n\\nvar server = new WebpackDevServer(compiler, {\\n  // webpack-dev-server options\\n\\n  contentBase: \\\"/path/to/directory\\\",\\n  // or: contentBase: \\\"http://localhost/\\\",\\n\\n  hot: true,\\n  // Enable special support for Hot Module Replacement\\n  // Page is no longer updated, but a \\\"webpackHotUpdate\\\" message is send to the content\\n  // Use \\\"webpack/hot/dev-server\\\" as additional module in your entry point\\n  // Note: this does _not_ add the `HotModuleReplacementPlugin` like the CLI option does.\\n\\n  // Set this as true if you want to access dev server from arbitrary url.\\n  // This is handy if you are using a html5 router.\\n  historyApiFallback: false,\\n\\n  // Set this if you want to enable gzip compression for assets\\n  compress: true,\\n\\n  // Set this if you want webpack-dev-server to delegate a single path to an arbitrary server.\\n  // Use \\\"*\\\" to proxy all paths to the specified server.\\n  // This is useful if you want to get rid of 'http://localhost:8080/' in script[src],\\n  // and has many other use cases (see https://github.com/webpack/webpack-dev-server/pull/127 ).\\n  proxy: {\\n    \\\"*\\\": \\\"http://localhost:9090\\\"\\n  },\\n\\n  // pass [static options](http://expressjs.com/en/4x/api.html#express.static) to inner express server\\n  staticOptions: {\\n  },\\n\\n  // webpack-dev-middleware options\\n  quiet: false,\\n  noInfo: false,\\n  lazy: true,\\n  filename: \\\"bundle.js\\\",\\n  watchOptions: {\\n    aggregateTimeout: 300,\\n    poll: 1000\\n  },\\n  publicPath: \\\"/assets/\\\",\\n  headers: { \\\"X-Custom-Header\\\": \\\"yes\\\" },\\n  stats: { colors: true }\\n});\\nserver.listen(8080, \\\"localhost\\\", function() {});\\n// server.close();*///# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbW1hbmRzL2Rldi5qcz85YjM3Iiwid2VicGFjazovLy8/ZDQxZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGF0aCBmcm9tICdwYXRoJ1xuaW1wb3J0IGNob2tpZGFyIGZyb20gJ2Nob2tpZGFyJ1xuaW1wb3J0IHtcbiAgLy8gbG9nLFxuICAvLyB3YWl0LFxuICBMaXN0ZW5lck1hbmFnZXIsXG4gIFNwaW5uZXJcbn0gZnJvbSAnLi4vdXRpbHMnXG5cbmltcG9ydCB7XG4gIC8vIGRldlNlcnZlclxuICAvLyBtb2NrU2VydmVyXG59IGZyb20gJy4uL2Rldi8nXG5cbi8vIGltcG9ydCB3ZWJwYWNrIGZyb20gJ3dlYnBhY2snXG5cbmNvbnN0IHNwaW5uZXIgPSBuZXcgU3Bpbm5lcigpXG5cbi8qXG53YXRjaFxuXG5tb2NrXG5cbmhvdGxvYWRcblxuY29tcGxpbGVcbiAqL1xuY29uc3QgUE9SVCA9IDMwMDFcblxuY2xhc3MgU2VydmVyIHtcbiAgY29uc3RydWN0b3IgKGN3ZCwgbW9ja1BhdGgpIHtcbiAgICB0aGlzLmxpc3RlbmVyTWFuYWdlciA9IG51bGxcbiAgICB0aGlzLm1vY2tQYXRoID0gbW9ja1BhdGhcbiAgICB0aGlzLmN3ZCA9IGN3ZFxuICB9XG4gIHJlc3RhcnQgKCkge1xuICAgIGRlbGV0ZSByZXF1aXJlLmNhY2hlW3JlcXVpcmUucmVzb2x2ZSgnLi4vZGV2L2RldlNlcnZlcicpXVxuICAgIGRlbGV0ZSByZXF1aXJlLmNhY2hlW3JlcXVpcmUucmVzb2x2ZSgnLi4vZGV2L21vY2tTZXJ2ZXInKV1cbiAgICAvKiBPYmplY3Qua2V5cyhyZXF1aXJlLmNhY2hlKS5mb3JFYWNoKG1vZHVsZVBhdGggPT4ge1xuICAgICAgLy8gZGVsZXRlIHJlcXVpcmUuY2FjaGVbbW9kdWxlUGF0aF1cblxuICAgICAgLy8gY29uc29sZS5sb2codGhpcy5tb2NrUGF0aClcbiAgICAgIC8vIGNvbnNvbGUubG9nKG1vZHVsZVBhdGgpXG4gICAgICBpZiAofm1vZHVsZVBhdGguaW5kZXhPZih0aGlzLm1vY2tQYXRoKSkge1xuICAgICAgICBjb25zb2xlLmxvZyhtb2R1bGVQYXRoKVxuICAgICAgICBkZWxldGUgcmVxdWlyZS5jYWNoZVttb2R1bGVQYXRoXVxuICAgICAgfVxuXG4gICAgICBpZiAofm1vZHVsZVBhdGguaW5kZXhPZignZGV2U2VydmVyJykpIHtcbiAgICAgICAgZGVsZXRlIHJlcXVpcmUuY2FjaGVbbW9kdWxlUGF0aF1cbiAgICAgIH1cblxuICAgICAgaWYgKH5tb2R1bGVQYXRoLmluZGV4T2YoJ21vY2tTZXJ2ZXInKSkge1xuICAgICAgICBkZWxldGUgcmVxdWlyZS5jYWNoZVttb2R1bGVQYXRoXVxuICAgICAgfVxuICAgIH0pKi9cblxuICAgIHRoaXMuc3RvcCgpXG4gICAgdGhpcy5zdGFydCgpXG4gIH1cbiAgc3RhcnQgKGNiKSB7XG4gICAgbGV0IGRldlNlcnZlciA9IHJlcXVpcmUoJy4uL2Rldi9kZXZTZXJ2ZXInKS5kZWZhdWx0XG4gICAgbGV0IG1vY2tTZXJ2ZXIgPSByZXF1aXJlKCcuLi9kZXYvbW9ja1NlcnZlcicpLmRlZmF1bHRcbiAgICBkZXZTZXJ2ZXIuY29udGV4dC5jd2QgPSB0aGlzLmN3ZFxuICAgIG1vY2tTZXJ2ZXIoZGV2U2VydmVyKVxuICAgIGxldCBzZXJ2ZXIgPSBkZXZTZXJ2ZXIubGlzdGVuKFBPUlQsICgpID0+IHtcbiAgICAgIGNiICYmIGNiLmNhbGwodGhpcylcbiAgICAgIC8vIGNvbnNvbGUubG9nKGBTZXJ2ZXIgc3RhcnRlZCBvbiAke1BPUlR9YClcbiAgICB9KVxuICAgIHRoaXMubGlzdGVuZXJNYW5hZ2VyID0gbmV3IExpc3RlbmVyTWFuYWdlcihzZXJ2ZXIpXG4gIH1cbiAgc3RvcCAoKSB7XG4gICAgdGhpcy5saXN0ZW5lck1hbmFnZXIgJiYgdGhpcy5saXN0ZW5lck1hbmFnZXIuZGlzcG9zZSgpXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgY21kID0+IHtcbi8qICBtb2NrU2VydmVyKGRldlNlcnZlcilcbiAgbGV0IHNlcnZlciA9IGRldlNlcnZlci5saXN0ZW4oUE9SVCwgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKGBTZXJ2ZXIgc3RhcnRlZCBvbiAke1BPUlR9YClcbiAgfSlcbiAgbGV0IGxpc3RlbmVyTWFuYWdlciA9IG5ldyBMaXN0ZW5lck1hbmFnZXIoc2VydmVyKVxuXG4gIC8vIGF3YWl0IHdhaXQoNCkqL1xuICBzcGlubmVyLnN0YXJ0KCd3YWl0JylcbiAgY29uc3QgbW9ja1BhdGggPSBwYXRoLmpvaW4oY21kLm9wdHMucHJvamVjdFJvb3RQYXRoLCAnTU9DSycpXG4gIGxldCBzZXJ2ZXIgPSBuZXcgU2VydmVyKGNtZC5vcHRzLnByb2plY3RSb290UGF0aCwgbW9ja1BhdGgpXG4gIHNlcnZlci5zdGFydCgoKSA9PiB7XG4gICAgc3Bpbm5lci5zdGFydCgnZG9uZScsIHtcbiAgICAgIHRleHQ6IGBNb2NrU2VydmVyOiBodHRwOi8vMTI3LjAuMC4xOiR7UE9SVH1gXG4gICAgfSlcbiAgfSlcbiAgLy8gd2F0Y2hcbiAgY29uc3Qgd2F0Y2hlciA9IGNob2tpZGFyLndhdGNoKG1vY2tQYXRoKVxuICB3YXRjaGVyLm9uKCdyZWFkeScsICgpID0+IHtcbiAgICB3YXRjaGVyXG4gICAgICAub24oJ2FkZCcsIHNlcnZlci5yZXN0YXJ0LmJpbmQoc2VydmVyKSlcbiAgICAgIC5vbignYWRkRGlyJywgc2VydmVyLnJlc3RhcnQuYmluZChzZXJ2ZXIpKVxuICAgICAgLm9uKCdjaGFuZ2UnLCBzZXJ2ZXIucmVzdGFydC5iaW5kKHNlcnZlcikpXG4gICAgICAub24oJ3VubGluaycsIHNlcnZlci5yZXN0YXJ0LmJpbmQoc2VydmVyKSlcbiAgICAgIC5vbigndW5saW5rRGlyJywgc2VydmVyLnJlc3RhcnQuYmluZChzZXJ2ZXIpKVxuICB9KVxuXG4gIC8vIHNwaW5uZXIuc3RhcnQoJ3J1bm5pbmcnKVxuICAvLyBhd2FpdCB3YWl0KDIpXG4gIC8vIHNwaW5uZXIuc3RhcnQoJ2RvbmUnKVxuICAvLyBhd2FpdCB3YWl0KDIpXG4gIC8vIHNwaW5uZXIuc3RhcnQoJ2Vycm9yJylcbiAgLy8gYXdhaXQgd2FpdCgyKVxufVxuXG4vKlxudmFyIFdlYnBhY2tEZXZTZXJ2ZXIgPSByZXF1aXJlKFwid2VicGFjay1kZXYtc2VydmVyXCIpO1xudmFyIHdlYnBhY2sgPSByZXF1aXJlKFwid2VicGFja1wiKTtcblxudmFyIGNvbXBpbGVyID0gd2VicGFjayh7XG4gIC8vIGNvbmZpZ3VyYXRpb25cbn0pO1xuXG52YXIgc2VydmVyID0gbmV3IFdlYnBhY2tEZXZTZXJ2ZXIoY29tcGlsZXIsIHtcbiAgLy8gd2VicGFjay1kZXYtc2VydmVyIG9wdGlvbnNcblxuICBjb250ZW50QmFzZTogXCIvcGF0aC90by9kaXJlY3RvcnlcIixcbiAgLy8gb3I6IGNvbnRlbnRCYXNlOiBcImh0dHA6Ly9sb2NhbGhvc3QvXCIsXG5cbiAgaG90OiB0cnVlLFxuICAvLyBFbmFibGUgc3BlY2lhbCBzdXBwb3J0IGZvciBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG4gIC8vIFBhZ2UgaXMgbm8gbG9uZ2VyIHVwZGF0ZWQsIGJ1dCBhIFwid2VicGFja0hvdFVwZGF0ZVwiIG1lc3NhZ2UgaXMgc2VuZCB0byB0aGUgY29udGVudFxuICAvLyBVc2UgXCJ3ZWJwYWNrL2hvdC9kZXYtc2VydmVyXCIgYXMgYWRkaXRpb25hbCBtb2R1bGUgaW4geW91ciBlbnRyeSBwb2ludFxuICAvLyBOb3RlOiB0aGlzIGRvZXMgX25vdF8gYWRkIHRoZSBgSG90TW9kdWxlUmVwbGFjZW1lbnRQbHVnaW5gIGxpa2UgdGhlIENMSSBvcHRpb24gZG9lcy5cblxuICAvLyBTZXQgdGhpcyBhcyB0cnVlIGlmIHlvdSB3YW50IHRvIGFjY2VzcyBkZXYgc2VydmVyIGZyb20gYXJiaXRyYXJ5IHVybC5cbiAgLy8gVGhpcyBpcyBoYW5keSBpZiB5b3UgYXJlIHVzaW5nIGEgaHRtbDUgcm91dGVyLlxuICBoaXN0b3J5QXBpRmFsbGJhY2s6IGZhbHNlLFxuXG4gIC8vIFNldCB0aGlzIGlmIHlvdSB3YW50IHRvIGVuYWJsZSBnemlwIGNvbXByZXNzaW9uIGZvciBhc3NldHNcbiAgY29tcHJlc3M6IHRydWUsXG5cbiAgLy8gU2V0IHRoaXMgaWYgeW91IHdhbnQgd2VicGFjay1kZXYtc2VydmVyIHRvIGRlbGVnYXRlIGEgc2luZ2xlIHBhdGggdG8gYW4gYXJiaXRyYXJ5IHNlcnZlci5cbiAgLy8gVXNlIFwiKlwiIHRvIHByb3h5IGFsbCBwYXRocyB0byB0aGUgc3BlY2lmaWVkIHNlcnZlci5cbiAgLy8gVGhpcyBpcyB1c2VmdWwgaWYgeW91IHdhbnQgdG8gZ2V0IHJpZCBvZiAnaHR0cDovL2xvY2FsaG9zdDo4MDgwLycgaW4gc2NyaXB0W3NyY10sXG4gIC8vIGFuZCBoYXMgbWFueSBvdGhlciB1c2UgY2FzZXMgKHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay93ZWJwYWNrLWRldi1zZXJ2ZXIvcHVsbC8xMjcgKS5cbiAgcHJveHk6IHtcbiAgICBcIipcIjogXCJodHRwOi8vbG9jYWxob3N0OjkwOTBcIlxuICB9LFxuXG4gIC8vIHBhc3MgW3N0YXRpYyBvcHRpb25zXShodHRwOi8vZXhwcmVzc2pzLmNvbS9lbi80eC9hcGkuaHRtbCNleHByZXNzLnN0YXRpYykgdG8gaW5uZXIgZXhwcmVzcyBzZXJ2ZXJcbiAgc3RhdGljT3B0aW9uczoge1xuICB9LFxuXG4gIC8vIHdlYnBhY2stZGV2LW1pZGRsZXdhcmUgb3B0aW9uc1xuICBxdWlldDogZmFsc2UsXG4gIG5vSW5mbzogZmFsc2UsXG4gIGxhenk6IHRydWUsXG4gIGZpbGVuYW1lOiBcImJ1bmRsZS5qc1wiLFxuICB3YXRjaE9wdGlvbnM6IHtcbiAgICBhZ2dyZWdhdGVUaW1lb3V0OiAzMDAsXG4gICAgcG9sbDogMTAwMFxuICB9LFxuICBwdWJsaWNQYXRoOiBcIi9hc3NldHMvXCIsXG4gIGhlYWRlcnM6IHsgXCJYLUN1c3RvbS1IZWFkZXJcIjogXCJ5ZXNcIiB9LFxuICBzdGF0czogeyBjb2xvcnM6IHRydWUgfVxufSk7XG5zZXJ2ZXIubGlzdGVuKDgwODAsIFwibG9jYWxob3N0XCIsIGZ1bmN0aW9uKCkge30pO1xuLy8gc2VydmVyLmNsb3NlKCk7Ki9cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvY29tbWFuZHMvZGV2LmpzIiwidW5kZWZpbmVkXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vICJdLCJtYXBwaW5ncyI6IkFBQUE7QUFnQkE7Ozs7Ozs7O0FBV0E7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDOEJBO0FBV0E7Ozs7OztBQWdCQTtBQVNBO0FBV0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWhDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Iiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 52 */\n/* unknown exports provided */\n/* all exports used */\n/*!******************************!*\\\n  !*** ./commands/generate.js ***!\n  \\******************************/\n/***/ function(module, exports) {\n\n\"use strict\";\neval(\"'use strict';Object.defineProperty(exports,\\\"__esModule\\\",{value:true});exports.default=function(cmd){console.log('generate');};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbW1hbmRzL2dlbmVyYXRlLmpzPzdiYWUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgKGNtZCkgPT4ge1xuICBjb25zb2xlLmxvZygnZ2VuZXJhdGUnKVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9jb21tYW5kcy9nZW5lcmF0ZS5qcyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\");\n\n/***/ },\n/* 53 */\n/* unknown exports provided */\n/* all exports used */\n/*!**************************!*\\\n  !*** ./commands/init.js ***!\n  \\**************************/\n/***/ function(module, exports) {\n\n\"use strict\";\neval(\"'use strict';Object.defineProperty(exports,\\\"__esModule\\\",{value:true});exports.default=function(cmd){console.log('init');};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbW1hbmRzL2luaXQuanM/MDMxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAoY21kKSA9PiB7XG4gIGNvbnNvbGUubG9nKCdpbml0Jylcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvY29tbWFuZHMvaW5pdC5qcyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\");\n\n/***/ },\n/* 54 */\n/* unknown exports provided */\n/* all exports used */\n/*!**************************!*\\\n  !*** ./commands/list.js ***!\n  \\**************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"'use strict';Object.defineProperty(exports,\\\"__esModule\\\",{value:true});var _chalk=__webpack_require__(/*! chalk */ 3);var _chalk2=_interopRequireDefault(_chalk);var _utils=__webpack_require__(/*! ../utils */ 9);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\\\"next\\\",value);},function(err){step(\\\"throw\\\",err);});}}return step(\\\"next\\\");});};}// import request from 'request'\\nvar request=__webpack_require__(/*! request */ 31);// Planning to use github group to store list\\nvar list=[{name:'components',usage:'npm i [name] -S',url:'https://api.github.com/users/fe-components/repos'},{name:'templates',usage:'fe init [name]',url:'https://api.github.com/users/fe-templates/repos'}];var spinner=new _utils.Spinner();var reporter=function reporter(body){// console.log()\\n// console.log('')\\n_utils.log.info('Available official '+body.reporter_name+' (usage: '+_chalk2.default.magenta.underline(body.reporter_usage)+'):');console.log();body.forEach(function(repo){console.log('  '+_chalk2.default.yellow('★')+'  '+_chalk2.default.blue(repo.name)+' - '+(repo.description||''));});};var fetchList=function fetchList(list){return new Promise(function(resolve,reject){request({url:list.url,headers:{'User-Agent':'fe'}},function(err,res,body){if(err)return reject(err);try{resolve(Object.assign(JSON.parse(body),{reporter_name:list.name,reporter_usage:list.usage}));}catch(err){reject(body);}});});};exports.default=_asyncToGenerator(regeneratorRuntime.mark(function _callee(){var promises,results;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:promises=list.map(function(item){return fetchList(item);});spinner.start({text:'fetching...'});_context.next=4;return Promise.all(promises).catch(function(err){return _utils.log.error(err);});case 4:results=_context.sent;spinner.stop();results.map(reporter);case 7:case'end':return _context.stop();}}},_callee,undefined);}));//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbW1hbmRzL2xpc3QuanM/MTQ1NCIsIndlYnBhY2s6Ly8vP2Q0MWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IHJlcXVlc3QgZnJvbSAncmVxdWVzdCdcbmltcG9ydCBjaGFsayBmcm9tICdjaGFsaydcbmNvbnN0IHJlcXVlc3QgPSByZXF1aXJlKCdyZXF1ZXN0JylcbmltcG9ydCB7XG4gIGxvZyxcbiAgLy8gd2FpdCxcbiAgU3Bpbm5lclxufSBmcm9tICcuLi91dGlscydcblxuLy8gUGxhbm5pbmcgdG8gdXNlIGdpdGh1YiBncm91cCB0byBzdG9yZSBsaXN0XG5jb25zdCBsaXN0ID0gW3tcbiAgbmFtZTogJ2NvbXBvbmVudHMnLFxuICB1c2FnZTogJ25wbSBpIFtuYW1lXSAtUycsXG4gIHVybDogJ2h0dHBzOi8vYXBpLmdpdGh1Yi5jb20vdXNlcnMvZmUtY29tcG9uZW50cy9yZXBvcydcbn0sIHtcbiAgbmFtZTogJ3RlbXBsYXRlcycsXG4gIHVzYWdlOiAnZmUgaW5pdCBbbmFtZV0nLFxuICB1cmw6ICdodHRwczovL2FwaS5naXRodWIuY29tL3VzZXJzL2ZlLXRlbXBsYXRlcy9yZXBvcydcbn1dXG5cbmNvbnN0IHNwaW5uZXIgPSBuZXcgU3Bpbm5lcigpXG5cbmNvbnN0IHJlcG9ydGVyID0gYm9keSA9PiB7XG4gIC8vIGNvbnNvbGUubG9nKClcbiAgLy8gY29uc29sZS5sb2coJycpXG4gIGxvZy5pbmZvKGBBdmFpbGFibGUgb2ZmaWNpYWwgJHtib2R5LnJlcG9ydGVyX25hbWV9ICh1c2FnZTogJHtjaGFsay5tYWdlbnRhLnVuZGVybGluZShib2R5LnJlcG9ydGVyX3VzYWdlKX0pOmApXG4gIGNvbnNvbGUubG9nKClcbiAgYm9keS5mb3JFYWNoKGZ1bmN0aW9uIChyZXBvKSB7XG4gICAgY29uc29sZS5sb2coYCAgJHtjaGFsay55ZWxsb3coJ+KYhScpfSAgJHtjaGFsay5ibHVlKHJlcG8ubmFtZSl9IC0gJHtyZXBvLmRlc2NyaXB0aW9uIHx8ICcnfWApXG4gIH0pXG59XG5cbmNvbnN0IGZldGNoTGlzdCA9IGxpc3QgPT4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICByZXF1ZXN0KHtcbiAgICB1cmw6IGxpc3QudXJsLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgICdVc2VyLUFnZW50JzogJ2ZlJ1xuICAgIH1cbiAgfSwgKGVyciwgcmVzLCBib2R5KSA9PiB7XG4gICAgaWYgKGVycikgcmV0dXJuIHJlamVjdChlcnIpXG4gICAgdHJ5IHtcbiAgICAgIHJlc29sdmUoT2JqZWN0LmFzc2lnbihKU09OLnBhcnNlKGJvZHkpLCB7XG4gICAgICAgIHJlcG9ydGVyX25hbWU6IGxpc3QubmFtZSxcbiAgICAgICAgcmVwb3J0ZXJfdXNhZ2U6IGxpc3QudXNhZ2VcbiAgICAgIH0pKVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgcmVqZWN0KGJvZHkpXG4gICAgfVxuICB9KVxufSlcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgKCkgPT4ge1xuICBsZXQgcHJvbWlzZXMgPSBsaXN0Lm1hcChpdGVtID0+IGZldGNoTGlzdChpdGVtKSlcbiAgc3Bpbm5lci5zdGFydCh7XG4gICAgdGV4dDogJ2ZldGNoaW5nLi4uJ1xuICB9KVxuICBsZXQgcmVzdWx0cyA9IGF3YWl0IFByb21pc2UuYWxsKHByb21pc2VzKVxuICAgIC5jYXRjaChlcnIgPT4gbG9nLmVycm9yKGVycikpXG4gIHNwaW5uZXIuc3RvcCgpXG4gIHJlc3VsdHMubWFwKHJlcG9ydGVyKVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9jb21tYW5kcy9saXN0LmpzIiwidW5kZWZpbmVkXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vICJdLCJtYXBwaW5ncyI6IkFBQ0E7QUFDQTtBQ1FBO0FBY0E7Iiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 55 */\n/* unknown exports provided */\n/* all exports used */\n/*!***************************!*\\\n  !*** ./commands/start.js ***!\n  \\***************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"'use strict';Object.defineProperty(exports,\\\"__esModule\\\",{value:true});var _webpack=__webpack_require__(/*! webpack */ 1);var _webpack2=_interopRequireDefault(_webpack);var _webpackDevServer=__webpack_require__(/*! webpack-dev-server */ 34);var _webpackDevServer2=_interopRequireDefault(_webpackDevServer);var _webpackConfig=__webpack_require__(/*! ../config/webpack.config.dev */ 43);var _webpackConfig2=_interopRequireDefault(_webpackConfig);var _getPaths=__webpack_require__(/*! ../config/getPaths */ 42);var _getPaths2=_interopRequireDefault(_getPaths);var _inquirer=__webpack_require__(/*! inquirer */ 22);var _inquirer2=_interopRequireDefault(_inquirer);var _chalk=__webpack_require__(/*! chalk */ 3);var _chalk2=_interopRequireDefault(_chalk);var _detectPort=__webpack_require__(/*! detect-port */ 19);var _detectPort2=_interopRequireDefault(_detectPort);var _clearConsole=__webpack_require__(/*! ../utils/clearConsole */ 61);var _clearConsole2=_interopRequireDefault(_clearConsole);var _openBrowser=__webpack_require__(/*! ../utils/openBrowser */ 63);var _openBrowser2=_interopRequireDefault(_openBrowser);var _formatWebpackMessages=__webpack_require__(/*! ../utils/formatWebpackMessages */ 62);var _formatWebpackMessages2=_interopRequireDefault(_formatWebpackMessages);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\\\"next\\\",value);},function(err){step(\\\"throw\\\",err);});}}return step(\\\"next\\\");});};}var compiler=void 0;exports.default=function(){var _ref=_asyncToGenerator(regeneratorRuntime.mark(function _callee(cmd){var _cmd$opts,projectRootPath,defaultConfig,paths,config,host,defaultPort,protocol,port,_ref2,shouldChangePort;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_cmd$opts=cmd.opts;projectRootPath=_cmd$opts.projectRootPath;defaultConfig=_cmd$opts.defaultConfig;console.log('projectRootPath:',projectRootPath);console.log('defaultConfig:',defaultConfig);paths=(0,_getPaths2.default)(projectRootPath);config=(0,_webpackConfig2.default)(paths);host=defaultConfig.HOST;defaultPort=defaultConfig.DEV_SERVER_PORT;protocol=defaultConfig.HTTPS?'https':'http';_context.next=12;return(0,_detectPort2.default)(defaultPort);case 12:port=_context.sent;if(!(port===defaultPort)){_context.next=17;break;}setupCompiler({host:host,port:port,protocol:protocol,paths:paths,config:config});runDevServer({host:host,port:port,protocol:protocol,paths:paths,config:config});return _context.abrupt('return');case 17:(0,_clearConsole2.default)();_context.next=20;return _inquirer2.default.prompt({type:'confirm',name:'shouldChangePort',message:''+_chalk2.default.yellow('Port '+_chalk2.default.underline(':'+defaultPort)+' is occupied, Would you like to run on '+_chalk2.default.underline(':'+port)+'?')});case 20:_ref2=_context.sent;shouldChangePort=_ref2.shouldChangePort;if(shouldChangePort){_context.next=24;break;}return _context.abrupt('return');case 24:setupCompiler({host:host,port:port,protocol:protocol,paths:paths,config:config});runDevServer({host:host,port:port,protocol:protocol,paths:paths,config:config});case 26:case'end':return _context.stop();}}},_callee,undefined);}));return function(_x){return _ref.apply(this,arguments);};}();var setupCompiler=function setupCompiler(_ref3){var host=_ref3.host;var port=_ref3.port;var protocol=_ref3.protocol;var config=_ref3.config;compiler=(0,_webpack2.default)(config);compiler.plugin('invalid',function(){(0,_clearConsole2.default)();console.log('Compiling...');});compiler.plugin('done',function(stats){// clearConsole()\\n// We have switched off the default Webpack output in WebpackDevServer\\n// options so we are going to \\\"massage\\\" the warnings and errors and present\\n// them in a readable focused way.\\nvar messages=(0,_formatWebpackMessages2.default)(stats.toJson({},true));if(!messages.errors.length&&!messages.warnings.length){console.log(_chalk2.default.green('Compiled successfully!'));console.log();console.log('The app is running at:');console.log();console.log('  '+_chalk2.default.cyan(protocol+'://'+host+':'+port+'/'));console.log();console.log('Note that the development build is not optimized.');console.log('To create a production build, use '+_chalk2.default.cyan('npm run build')+'.');console.log();}// If errors exist, only show errors.\\nif(messages.errors.length){console.log(_chalk2.default.red('Failed to compile.'));console.log();messages.errors.forEach(function(message){console.log(message);console.log();});return;}// Show warnings if no errors were found.\\nif(messages.warnings.length){console.log(_chalk2.default.yellow('Compiled with warnings.'));console.log();messages.warnings.forEach(function(message){console.log(message);console.log();});// Teach some ESLint tricks.\\nconsole.log('You may use special comments to disable some warnings.');console.log('Use '+_chalk2.default.yellow('// eslint-disable-next-line')+' to ignore the next line.');console.log('Use '+_chalk2.default.yellow('/* eslint-disable */')+' to ignore all warnings in a file.');}});};var runDevServer=function runDevServer(_ref4){var host=_ref4.host;var port=_ref4.port;var protocol=_ref4.protocol;var paths=_ref4.paths;var config=_ref4.config;var devServer=new _webpackDevServer2.default(compiler,{// Silence WebpackDevServer's own logs since they're generally not useful.\\n// It will still show compile warnings and errors with this setting.\\nclientLogLevel:'none',// By default WebpackDevServer serves physical files from current directory\\n// in addition to all the virtual build products that it serves from memory.\\n// This is confusing because those files won’t automatically be available in\\n// production build folder unless we copy them. However, copying the whole\\n// project directory is dangerous because we may expose sensitive files.\\n// Instead, we establish a convention that only files in `public` directory\\n// get served. Our build script will copy `public` into the `build` folder.\\n// In `index.html`, you can get URL of `public` folder with %PUBLIC_PATH%:\\n// <link rel=\\\"shortcut icon\\\" href=\\\"%PUBLIC_URL%/favicon.ico\\\">\\n// In JavaScript code, you can access it with `process.env.PUBLIC_URL`.\\n// Note that we only recommend to use `public` folder as an escape hatch\\n// for files like `favicon.ico`, `manifest.json`, and libraries that are\\n// for some reason broken when imported through Webpack. If you just want to\\n// use an image, put it in `src` and `import` it from JavaScript instead.\\ncontentBase:paths.appPublic,// Enable hot reloading server. It will provide /sockjs-node/ endpoint\\n// for the WebpackDevServer client so it can learn when the files were\\n// updated. The WebpackDevServer client is included as an entry point\\n// in the Webpack development configuration. Note that only changes\\n// to CSS are currently hot reloaded. JS changes will refresh the browser.\\nhot:true,// It is important to tell WebpackDevServer to use the same \\\"root\\\" path\\n// as we specified in the config. In development, we always serve from /.\\npublicPath:config.output.publicPath,// WebpackDevServer is noisy by default so we emit custom message instead\\n// by listening to the compiler events with `compiler.plugin` calls above.\\nquiet:true,// Reportedly, this avoids CPU overload on some systems.\\n// https://github.com/facebookincubator/create-react-app/issues/293\\nwatchOptions:{ignored:/node_modules/},// Enable HTTPS if the HTTPS environment variable is set to 'true'\\nhttps:protocol==='https',host:host});// Our custom middleware proxies requests to /index.html or a remote API.\\n// addMiddleware(devServer)\\n// Launch WebpackDevServer.\\ndevServer.listen(port,function(err,result){if(err){return console.log(err);}(0,_clearConsole2.default)();console.log(_chalk2.default.cyan('Starting the development server...'));console.log();(0,_openBrowser2.default)(protocol+'://'+host+':'+port+'/');});};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbW1hbmRzL3N0YXJ0LmpzP2ZhNzEiLCJ3ZWJwYWNrOi8vLz9kNDFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB3ZWJwYWNrIGZyb20gJ3dlYnBhY2snXG5pbXBvcnQgV2VicGFja0RldlNlcnZlciBmcm9tICd3ZWJwYWNrLWRldi1zZXJ2ZXInXG5pbXBvcnQgd2VicGFja0RldkNvbmZpZyBmcm9tICcuLi9jb25maWcvd2VicGFjay5jb25maWcuZGV2J1xuaW1wb3J0IGdldFBhdGhzIGZyb20gJy4uL2NvbmZpZy9nZXRQYXRocydcbmltcG9ydCBpbnF1aXJlciBmcm9tICdpbnF1aXJlcidcbmltcG9ydCBjaGFsayBmcm9tICdjaGFsaydcbmltcG9ydCBkZXRlY3QgZnJvbSAnZGV0ZWN0LXBvcnQnXG5pbXBvcnQgY2xlYXJDb25zb2xlIGZyb20gJy4uL3V0aWxzL2NsZWFyQ29uc29sZSdcbmltcG9ydCBvcGVuQnJvd3NlciBmcm9tICcuLi91dGlscy9vcGVuQnJvd3NlcidcbmltcG9ydCBmb3JtYXRXZWJwYWNrTWVzc2FnZXMgZnJvbSAnLi4vdXRpbHMvZm9ybWF0V2VicGFja01lc3NhZ2VzJ1xuXG5sZXQgY29tcGlsZXJcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgY21kID0+IHtcbiAgY29uc3QgeyBwcm9qZWN0Um9vdFBhdGgsIGRlZmF1bHRDb25maWcgfSA9IGNtZC5vcHRzXG4gIGNvbnNvbGUubG9nKCdwcm9qZWN0Um9vdFBhdGg6JywgcHJvamVjdFJvb3RQYXRoKVxuICBjb25zb2xlLmxvZygnZGVmYXVsdENvbmZpZzonLCBkZWZhdWx0Q29uZmlnKVxuXG4gIGNvbnN0IHBhdGhzID0gZ2V0UGF0aHMocHJvamVjdFJvb3RQYXRoKVxuICBjb25zdCBjb25maWcgPSB3ZWJwYWNrRGV2Q29uZmlnKHBhdGhzKVxuICBjb25zdCBob3N0ID0gZGVmYXVsdENvbmZpZy5IT1NUXG4gIGNvbnN0IGRlZmF1bHRQb3J0ID0gZGVmYXVsdENvbmZpZy5ERVZfU0VSVkVSX1BPUlRcbiAgY29uc3QgcHJvdG9jb2wgPSBkZWZhdWx0Q29uZmlnLkhUVFBTID8gJ2h0dHBzJyA6ICdodHRwJ1xuICBjb25zdCBwb3J0ID0gYXdhaXQgZGV0ZWN0KGRlZmF1bHRQb3J0KVxuXG4gIC8vIHBvcnQgaXMgYXZpbGFibGVcbiAgaWYgKHBvcnQgPT09IGRlZmF1bHRQb3J0KSB7XG4gICAgc2V0dXBDb21waWxlcih7IGhvc3QsIHBvcnQsIHByb3RvY29sLCBwYXRocywgY29uZmlnIH0pXG4gICAgcnVuRGV2U2VydmVyKHsgaG9zdCwgcG9ydCwgcHJvdG9jb2wsIHBhdGhzLCBjb25maWcgfSlcbiAgICByZXR1cm5cbiAgfVxuICBjbGVhckNvbnNvbGUoKVxuICBjb25zdCB7IHNob3VsZENoYW5nZVBvcnQgfSA9IGF3YWl0IGlucXVpcmVyLnByb21wdCh7XG4gICAgdHlwZTogJ2NvbmZpcm0nLFxuICAgIG5hbWU6ICdzaG91bGRDaGFuZ2VQb3J0JyxcbiAgICBtZXNzYWdlOiBgJHtjaGFsay55ZWxsb3coYFBvcnQgJHtjaGFsay51bmRlcmxpbmUoYDoke2RlZmF1bHRQb3J0fWApfSBpcyBvY2N1cGllZCwgV291bGQgeW91IGxpa2UgdG8gcnVuIG9uICR7Y2hhbGsudW5kZXJsaW5lKGA6JHtwb3J0fWApfT9gKX1gXG4gIH0pXG4gIGlmICghc2hvdWxkQ2hhbmdlUG9ydCkgcmV0dXJuXG4gIHNldHVwQ29tcGlsZXIoeyBob3N0LCBwb3J0LCBwcm90b2NvbCwgcGF0aHMsIGNvbmZpZyB9KVxuICBydW5EZXZTZXJ2ZXIoeyBob3N0LCBwb3J0LCBwcm90b2NvbCwgcGF0aHMsIGNvbmZpZyB9KVxufVxuXG5jb25zdCBzZXR1cENvbXBpbGVyID0gKHsgaG9zdCwgcG9ydCwgcHJvdG9jb2wsIGNvbmZpZyB9KSA9PiB7XG4gIGNvbXBpbGVyID0gd2VicGFjayhjb25maWcpXG4gIGNvbXBpbGVyLnBsdWdpbignaW52YWxpZCcsIGZ1bmN0aW9uICgpIHtcbiAgICBjbGVhckNvbnNvbGUoKVxuICAgIGNvbnNvbGUubG9nKCdDb21waWxpbmcuLi4nKVxuICB9KVxuICBjb21waWxlci5wbHVnaW4oJ2RvbmUnLCBmdW5jdGlvbiAoc3RhdHMpIHtcbiAgICAvLyBjbGVhckNvbnNvbGUoKVxuXG4gICAgLy8gV2UgaGF2ZSBzd2l0Y2hlZCBvZmYgdGhlIGRlZmF1bHQgV2VicGFjayBvdXRwdXQgaW4gV2VicGFja0RldlNlcnZlclxuICAgIC8vIG9wdGlvbnMgc28gd2UgYXJlIGdvaW5nIHRvIFwibWFzc2FnZVwiIHRoZSB3YXJuaW5ncyBhbmQgZXJyb3JzIGFuZCBwcmVzZW50XG4gICAgLy8gdGhlbSBpbiBhIHJlYWRhYmxlIGZvY3VzZWQgd2F5LlxuICAgIHZhciBtZXNzYWdlcyA9IGZvcm1hdFdlYnBhY2tNZXNzYWdlcyhzdGF0cy50b0pzb24oe30sIHRydWUpKVxuICAgIGlmICghbWVzc2FnZXMuZXJyb3JzLmxlbmd0aCAmJiAhbWVzc2FnZXMud2FybmluZ3MubGVuZ3RoKSB7XG4gICAgICBjb25zb2xlLmxvZyhjaGFsay5ncmVlbignQ29tcGlsZWQgc3VjY2Vzc2Z1bGx5IScpKVxuICAgICAgY29uc29sZS5sb2coKVxuICAgICAgY29uc29sZS5sb2coJ1RoZSBhcHAgaXMgcnVubmluZyBhdDonKVxuICAgICAgY29uc29sZS5sb2coKVxuICAgICAgY29uc29sZS5sb2coJyAgJyArIGNoYWxrLmN5YW4ocHJvdG9jb2wgKyAnOi8vJyArIGhvc3QgKyAnOicgKyBwb3J0ICsgJy8nKSlcbiAgICAgIGNvbnNvbGUubG9nKClcbiAgICAgIGNvbnNvbGUubG9nKCdOb3RlIHRoYXQgdGhlIGRldmVsb3BtZW50IGJ1aWxkIGlzIG5vdCBvcHRpbWl6ZWQuJylcbiAgICAgIGNvbnNvbGUubG9nKCdUbyBjcmVhdGUgYSBwcm9kdWN0aW9uIGJ1aWxkLCB1c2UgJyArIGNoYWxrLmN5YW4oJ25wbSBydW4gYnVpbGQnKSArICcuJylcbiAgICAgIGNvbnNvbGUubG9nKClcbiAgICB9XG5cbiAgICAvLyBJZiBlcnJvcnMgZXhpc3QsIG9ubHkgc2hvdyBlcnJvcnMuXG4gICAgaWYgKG1lc3NhZ2VzLmVycm9ycy5sZW5ndGgpIHtcbiAgICAgIGNvbnNvbGUubG9nKGNoYWxrLnJlZCgnRmFpbGVkIHRvIGNvbXBpbGUuJykpXG4gICAgICBjb25zb2xlLmxvZygpXG4gICAgICBtZXNzYWdlcy5lcnJvcnMuZm9yRWFjaChtZXNzYWdlID0+IHtcbiAgICAgICAgY29uc29sZS5sb2cobWVzc2FnZSlcbiAgICAgICAgY29uc29sZS5sb2coKVxuICAgICAgfSlcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIFNob3cgd2FybmluZ3MgaWYgbm8gZXJyb3JzIHdlcmUgZm91bmQuXG4gICAgaWYgKG1lc3NhZ2VzLndhcm5pbmdzLmxlbmd0aCkge1xuICAgICAgY29uc29sZS5sb2coY2hhbGsueWVsbG93KCdDb21waWxlZCB3aXRoIHdhcm5pbmdzLicpKVxuICAgICAgY29uc29sZS5sb2coKVxuICAgICAgbWVzc2FnZXMud2FybmluZ3MuZm9yRWFjaChtZXNzYWdlID0+IHtcbiAgICAgICAgY29uc29sZS5sb2cobWVzc2FnZSlcbiAgICAgICAgY29uc29sZS5sb2coKVxuICAgICAgfSlcbiAgICAgIC8vIFRlYWNoIHNvbWUgRVNMaW50IHRyaWNrcy5cbiAgICAgIGNvbnNvbGUubG9nKCdZb3UgbWF5IHVzZSBzcGVjaWFsIGNvbW1lbnRzIHRvIGRpc2FibGUgc29tZSB3YXJuaW5ncy4nKVxuICAgICAgY29uc29sZS5sb2coJ1VzZSAnICsgY2hhbGsueWVsbG93KCcvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUnKSArICcgdG8gaWdub3JlIHRoZSBuZXh0IGxpbmUuJylcbiAgICAgIGNvbnNvbGUubG9nKCdVc2UgJyArIGNoYWxrLnllbGxvdygnLyogZXNsaW50LWRpc2FibGUgKi8nKSArICcgdG8gaWdub3JlIGFsbCB3YXJuaW5ncyBpbiBhIGZpbGUuJylcbiAgICB9XG4gIH0pXG59XG5cbmNvbnN0IHJ1bkRldlNlcnZlciA9ICh7IGhvc3QsIHBvcnQsIHByb3RvY29sLCBwYXRocywgY29uZmlnIH0pID0+IHtcbiAgdmFyIGRldlNlcnZlciA9IG5ldyBXZWJwYWNrRGV2U2VydmVyKGNvbXBpbGVyLCB7XG4gICAgLy8gU2lsZW5jZSBXZWJwYWNrRGV2U2VydmVyJ3Mgb3duIGxvZ3Mgc2luY2UgdGhleSdyZSBnZW5lcmFsbHkgbm90IHVzZWZ1bC5cbiAgICAvLyBJdCB3aWxsIHN0aWxsIHNob3cgY29tcGlsZSB3YXJuaW5ncyBhbmQgZXJyb3JzIHdpdGggdGhpcyBzZXR0aW5nLlxuICAgIGNsaWVudExvZ0xldmVsOiAnbm9uZScsXG4gICAgLy8gQnkgZGVmYXVsdCBXZWJwYWNrRGV2U2VydmVyIHNlcnZlcyBwaHlzaWNhbCBmaWxlcyBmcm9tIGN1cnJlbnQgZGlyZWN0b3J5XG4gICAgLy8gaW4gYWRkaXRpb24gdG8gYWxsIHRoZSB2aXJ0dWFsIGJ1aWxkIHByb2R1Y3RzIHRoYXQgaXQgc2VydmVzIGZyb20gbWVtb3J5LlxuICAgIC8vIFRoaXMgaXMgY29uZnVzaW5nIGJlY2F1c2UgdGhvc2UgZmlsZXMgd29u4oCZdCBhdXRvbWF0aWNhbGx5IGJlIGF2YWlsYWJsZSBpblxuICAgIC8vIHByb2R1Y3Rpb24gYnVpbGQgZm9sZGVyIHVubGVzcyB3ZSBjb3B5IHRoZW0uIEhvd2V2ZXIsIGNvcHlpbmcgdGhlIHdob2xlXG4gICAgLy8gcHJvamVjdCBkaXJlY3RvcnkgaXMgZGFuZ2Vyb3VzIGJlY2F1c2Ugd2UgbWF5IGV4cG9zZSBzZW5zaXRpdmUgZmlsZXMuXG4gICAgLy8gSW5zdGVhZCwgd2UgZXN0YWJsaXNoIGEgY29udmVudGlvbiB0aGF0IG9ubHkgZmlsZXMgaW4gYHB1YmxpY2AgZGlyZWN0b3J5XG4gICAgLy8gZ2V0IHNlcnZlZC4gT3VyIGJ1aWxkIHNjcmlwdCB3aWxsIGNvcHkgYHB1YmxpY2AgaW50byB0aGUgYGJ1aWxkYCBmb2xkZXIuXG4gICAgLy8gSW4gYGluZGV4Lmh0bWxgLCB5b3UgY2FuIGdldCBVUkwgb2YgYHB1YmxpY2AgZm9sZGVyIHdpdGggJVBVQkxJQ19QQVRIJTpcbiAgICAvLyA8bGluayByZWw9XCJzaG9ydGN1dCBpY29uXCIgaHJlZj1cIiVQVUJMSUNfVVJMJS9mYXZpY29uLmljb1wiPlxuICAgIC8vIEluIEphdmFTY3JpcHQgY29kZSwgeW91IGNhbiBhY2Nlc3MgaXQgd2l0aCBgcHJvY2Vzcy5lbnYuUFVCTElDX1VSTGAuXG4gICAgLy8gTm90ZSB0aGF0IHdlIG9ubHkgcmVjb21tZW5kIHRvIHVzZSBgcHVibGljYCBmb2xkZXIgYXMgYW4gZXNjYXBlIGhhdGNoXG4gICAgLy8gZm9yIGZpbGVzIGxpa2UgYGZhdmljb24uaWNvYCwgYG1hbmlmZXN0Lmpzb25gLCBhbmQgbGlicmFyaWVzIHRoYXQgYXJlXG4gICAgLy8gZm9yIHNvbWUgcmVhc29uIGJyb2tlbiB3aGVuIGltcG9ydGVkIHRocm91Z2ggV2VicGFjay4gSWYgeW91IGp1c3Qgd2FudCB0b1xuICAgIC8vIHVzZSBhbiBpbWFnZSwgcHV0IGl0IGluIGBzcmNgIGFuZCBgaW1wb3J0YCBpdCBmcm9tIEphdmFTY3JpcHQgaW5zdGVhZC5cbiAgICBjb250ZW50QmFzZTogcGF0aHMuYXBwUHVibGljLFxuICAgIC8vIEVuYWJsZSBob3QgcmVsb2FkaW5nIHNlcnZlci4gSXQgd2lsbCBwcm92aWRlIC9zb2NranMtbm9kZS8gZW5kcG9pbnRcbiAgICAvLyBmb3IgdGhlIFdlYnBhY2tEZXZTZXJ2ZXIgY2xpZW50IHNvIGl0IGNhbiBsZWFybiB3aGVuIHRoZSBmaWxlcyB3ZXJlXG4gICAgLy8gdXBkYXRlZC4gVGhlIFdlYnBhY2tEZXZTZXJ2ZXIgY2xpZW50IGlzIGluY2x1ZGVkIGFzIGFuIGVudHJ5IHBvaW50XG4gICAgLy8gaW4gdGhlIFdlYnBhY2sgZGV2ZWxvcG1lbnQgY29uZmlndXJhdGlvbi4gTm90ZSB0aGF0IG9ubHkgY2hhbmdlc1xuICAgIC8vIHRvIENTUyBhcmUgY3VycmVudGx5IGhvdCByZWxvYWRlZC4gSlMgY2hhbmdlcyB3aWxsIHJlZnJlc2ggdGhlIGJyb3dzZXIuXG4gICAgaG90OiB0cnVlLFxuICAgIC8vIEl0IGlzIGltcG9ydGFudCB0byB0ZWxsIFdlYnBhY2tEZXZTZXJ2ZXIgdG8gdXNlIHRoZSBzYW1lIFwicm9vdFwiIHBhdGhcbiAgICAvLyBhcyB3ZSBzcGVjaWZpZWQgaW4gdGhlIGNvbmZpZy4gSW4gZGV2ZWxvcG1lbnQsIHdlIGFsd2F5cyBzZXJ2ZSBmcm9tIC8uXG4gICAgcHVibGljUGF0aDogY29uZmlnLm91dHB1dC5wdWJsaWNQYXRoLFxuICAgIC8vIFdlYnBhY2tEZXZTZXJ2ZXIgaXMgbm9pc3kgYnkgZGVmYXVsdCBzbyB3ZSBlbWl0IGN1c3RvbSBtZXNzYWdlIGluc3RlYWRcbiAgICAvLyBieSBsaXN0ZW5pbmcgdG8gdGhlIGNvbXBpbGVyIGV2ZW50cyB3aXRoIGBjb21waWxlci5wbHVnaW5gIGNhbGxzIGFib3ZlLlxuICAgIHF1aWV0OiB0cnVlLFxuICAgIC8vIFJlcG9ydGVkbHksIHRoaXMgYXZvaWRzIENQVSBvdmVybG9hZCBvbiBzb21lIHN5c3RlbXMuXG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29raW5jdWJhdG9yL2NyZWF0ZS1yZWFjdC1hcHAvaXNzdWVzLzI5M1xuICAgIHdhdGNoT3B0aW9uczoge1xuICAgICAgaWdub3JlZDogL25vZGVfbW9kdWxlcy9cbiAgICB9LFxuICAgIC8vIEVuYWJsZSBIVFRQUyBpZiB0aGUgSFRUUFMgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgc2V0IHRvICd0cnVlJ1xuICAgIGh0dHBzOiBwcm90b2NvbCA9PT0gJ2h0dHBzJyxcbiAgICBob3N0OiBob3N0XG4gIH0pXG5cbiAgLy8gT3VyIGN1c3RvbSBtaWRkbGV3YXJlIHByb3hpZXMgcmVxdWVzdHMgdG8gL2luZGV4Lmh0bWwgb3IgYSByZW1vdGUgQVBJLlxuICAvLyBhZGRNaWRkbGV3YXJlKGRldlNlcnZlcilcblxuICAvLyBMYXVuY2ggV2VicGFja0RldlNlcnZlci5cbiAgZGV2U2VydmVyLmxpc3Rlbihwb3J0LCAoZXJyLCByZXN1bHQpID0+IHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICByZXR1cm4gY29uc29sZS5sb2coZXJyKVxuICAgIH1cblxuICAgIGNsZWFyQ29uc29sZSgpXG4gICAgY29uc29sZS5sb2coY2hhbGsuY3lhbignU3RhcnRpbmcgdGhlIGRldmVsb3BtZW50IHNlcnZlci4uLicpKVxuICAgIGNvbnNvbGUubG9nKClcbiAgICBvcGVuQnJvd3Nlcihwcm90b2NvbCArICc6Ly8nICsgaG9zdCArICc6JyArIHBvcnQgKyAnLycpXG4gIH0pXG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2NvbW1hbmRzL3N0YXJ0LmpzIiwidW5kZWZpbmVkXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vICJdLCJtYXBwaW5ncyI6IkFBQUE7QUNtREE7QUFDQTtBQUNBO0FBQ0E7QUFjQTtBQVdBO0FBUUE7QURVQTtBQUNBO0FDRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFJQTtBQUtBO0FBRUE7Iiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 56 */\n/* unknown exports provided */\n/* all exports used */\n/*!****************************!*\\\n  !*** ./commands/update.js ***!\n  \\****************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"'use strict';Object.defineProperty(exports,\\\"__esModule\\\",{value:true});var _updtr=__webpack_require__(/*! updtr */ 33);exports.default=function(cmd){return(0,_updtr.run)({cwd:cmd.opts.projectRootPath,reporter:_updtr.reporters.default// wanted: commander.wanted,\\n// testCmd: commander.test,\\n// exclude: commander.exclude,\\n// testStdout: commander.testStdout,\\n// saveExact: commander.saveExact,\\n// registry: commander.registry\\n},function(err){if(err)throw err;});};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbW1hbmRzL3VwZGF0ZS5qcz83YzIzIiwid2VicGFjazovLy8/ZDQxZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBydW4sIHJlcG9ydGVycyB9IGZyb20gJ3VwZHRyJ1xuXG5leHBvcnQgZGVmYXVsdCBjbWQgPT4gcnVuKHtcbiAgY3dkOiBjbWQub3B0cy5wcm9qZWN0Um9vdFBhdGgsXG4gIHJlcG9ydGVyOiByZXBvcnRlcnMuZGVmYXVsdFxuICAvLyB3YW50ZWQ6IGNvbW1hbmRlci53YW50ZWQsXG4gIC8vIHRlc3RDbWQ6IGNvbW1hbmRlci50ZXN0LFxuICAvLyBleGNsdWRlOiBjb21tYW5kZXIuZXhjbHVkZSxcbiAgLy8gdGVzdFN0ZG91dDogY29tbWFuZGVyLnRlc3RTdGRvdXQsXG4gIC8vIHNhdmVFeGFjdDogY29tbWFuZGVyLnNhdmVFeGFjdCxcbiAgLy8gcmVnaXN0cnk6IGNvbW1hbmRlci5yZWdpc3RyeVxufSwgZXJyID0+IHtcbiAgaWYgKGVycikgdGhyb3cgZXJyXG59KVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9jb21tYW5kcy91cGRhdGUuanMiLCJ1bmRlZmluZWRcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gIl0sIm1hcHBpbmdzIjoiQUFBQTtBQ01BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFSQSIsInNvdXJjZVJvb3QiOiIifQ==\");\n\n/***/ },\n/* 57 */\n/* unknown exports provided */\n/* all exports used */\n/*!*****************************!*\\\n  !*** ./commands/upgrade.js ***!\n  \\*****************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"'use strict';Object.defineProperty(exports,\\\"__esModule\\\",{value:true});exports.checkVersion=undefined;var _ora=__webpack_require__(/*! ora */ 11);var _ora2=_interopRequireDefault(_ora);var _execa=__webpack_require__(/*! execa */ 20);var _execa2=_interopRequireDefault(_execa);var _semver=__webpack_require__(/*! semver */ 32);var _semver2=_interopRequireDefault(_semver);var _chalk=__webpack_require__(/*! chalk */ 3);var _chalk2=_interopRequireDefault(_chalk);var _utils=__webpack_require__(/*! ../utils */ 9);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\\\"next\\\",value);},function(err){step(\\\"throw\\\",err);});}}return step(\\\"next\\\");});};}var checkVersion=exports.checkVersion=function(){var _ref=_asyncToGenerator(regeneratorRuntime.mark(function _callee(version){var _ref2,stdout;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _execa2.default.shell('npm show fe version').catch(_utils.log.error);case 2:_ref2=_context.sent;stdout=_ref2.stdout;return _context.abrupt('return',_semver2.default.gt(stdout,version)?stdout:false);case 5:case'end':return _context.stop();}}},_callee,undefined);}));return function checkVersion(_x){return _ref.apply(this,arguments);};}();exports.default=function(){var _ref3=_asyncToGenerator(regeneratorRuntime.mark(function _callee2(cmd){var spinner,shouldUpgrade;return regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:spinner=(0,_ora2.default)({text:'Checking for new version',color:'yellow'// spinner: process.argv[2]\\n}).start();_context2.next=3;return checkVersion(cmd.opts.version);case 3:shouldUpgrade=_context2.sent;if(shouldUpgrade){_context2.next=7;break;}spinner.stop();return _context2.abrupt('return',_utils.log.success('You are using the latest version'));case 7:spinner.color='green';spinner.text='Installing new version '+_chalk2.default.yellow(shouldUpgrade);_context2.next=11;return _execa2.default.shell('npm install fe -g').catch(_utils.log.error);case 11:spinner.stop();_utils.log.success('You are using the latest version');case 13:case'end':return _context2.stop();}}},_callee2,undefined);}));return function(_x2){return _ref3.apply(this,arguments);};}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbW1hbmRzL3VwZ3JhZGUuanM/ZTY1OCIsIndlYnBhY2s6Ly8vP2Q0MWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG9yYSBmcm9tICdvcmEnXG5pbXBvcnQgZXhlY2EgZnJvbSAnZXhlY2EnXG5pbXBvcnQgc2VtdmVyIGZyb20gJ3NlbXZlcidcbmltcG9ydCBjaGFsayBmcm9tICdjaGFsaydcbmltcG9ydCB7IGxvZyB9IGZyb20gJy4uL3V0aWxzJ1xuXG5leHBvcnQgY29uc3QgY2hlY2tWZXJzaW9uID0gYXN5bmMgdmVyc2lvbiA9PiB7XG4gIGNvbnN0IHsgc3Rkb3V0IH0gPSBhd2FpdCBleGVjYS5zaGVsbCgnbnBtIHNob3cgZmUgdmVyc2lvbicpXG4gICAgLmNhdGNoKGxvZy5lcnJvcilcbiAgcmV0dXJuIHNlbXZlci5ndChzdGRvdXQsIHZlcnNpb24pXG4gICAgPyBzdGRvdXRcbiAgICA6IGZhbHNlXG59XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGNtZCA9PiB7XG4gIGxldCBzcGlubmVyID0gb3JhKHtcbiAgICB0ZXh0OiAnQ2hlY2tpbmcgZm9yIG5ldyB2ZXJzaW9uJyxcbiAgICBjb2xvcjogJ3llbGxvdydcbiAgICAvLyBzcGlubmVyOiBwcm9jZXNzLmFyZ3ZbMl1cbiAgfSkuc3RhcnQoKVxuXG4gIGNvbnN0IHNob3VsZFVwZ3JhZGUgPSBhd2FpdCBjaGVja1ZlcnNpb24oY21kLm9wdHMudmVyc2lvbilcbiAgaWYgKCFzaG91bGRVcGdyYWRlKSB7XG4gICAgc3Bpbm5lci5zdG9wKClcbiAgICByZXR1cm4gbG9nLnN1Y2Nlc3MoJ1lvdSBhcmUgdXNpbmcgdGhlIGxhdGVzdCB2ZXJzaW9uJylcbiAgfVxuXG4gIHNwaW5uZXIuY29sb3IgPSAnZ3JlZW4nXG4gIHNwaW5uZXIudGV4dCA9IGBJbnN0YWxsaW5nIG5ldyB2ZXJzaW9uICR7Y2hhbGsueWVsbG93KHNob3VsZFVwZ3JhZGUpfWBcbiAgYXdhaXQgZXhlY2Euc2hlbGwoJ25wbSBpbnN0YWxsIGZlIC1nJylcbiAgICAuY2F0Y2gobG9nLmVycm9yKVxuICBzcGlubmVyLnN0b3AoKVxuICBsb2cuc3VjY2VzcygnWW91IGFyZSB1c2luZyB0aGUgbGF0ZXN0IHZlcnNpb24nKVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9jb21tYW5kcy91cGdyYWRlLmpzIiwidW5kZWZpbmVkXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vICJdLCJtYXBwaW5ncyI6IkFBQUE7QUNlQSIsInNvdXJjZVJvb3QiOiIifQ==\");\n\n/***/ },\n/* 58 */\n/* unknown exports provided */\n/* all exports used */\n/*!*******************!*\\\n  !*** ./config.js ***!\n  \\*******************/\n/***/ function(module, exports) {\n\n\"use strict\";\neval(\"'use strict';Object.defineProperty(exports,\\\"__esModule\\\",{value:true});exports.default={'DEV_SERVER_PORT':3000,'MOCK_SERVER_PORT':3000,'HTTPS':false,'HOST':'localhost'};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbmZpZy5qcz85ZDlhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgJ0RFVl9TRVJWRVJfUE9SVCc6IDMwMDAsXG4gICdNT0NLX1NFUlZFUl9QT1JUJzogMzAwMCxcbiAgJ0hUVFBTJzogZmFsc2UsXG4gICdIT1NUJzogJ2xvY2FsaG9zdCdcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvY29uZmlnLmpzIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\");\n\n/***/ },\n/* 59 */\n/* unknown exports provided */\n/* all exports used */\n/*!**************************************!*\\\n  !*** ./dev/getMockRoutes.noparse.js ***!\n  \\**************************************/\n/***/ function(module, exports) {\n\neval(\"'use strict';var fs=require('fs');var path=require('path');var chokidar=require('chokidar');var getSubDirs=function getSubDirs(parent){return fs.readdirSync(parent).filter(function(dir){return fs.statSync(path.join(parent,dir)).isDirectory();});};/*\\n├── mock\\n│└── TaskList\\n│    ├── index.js\\n│    └── task-list.json\\n */var MOCK='mock';module.exports=function(cwd){var mockPath=path.join(cwd,MOCK);var mockPaths=getSubDirs(mockPath);var watcher=chokidar.watch(mockPath);watcher.on('ready',function(){watcher// .on('add', compileHotServer)\\n// .on('addDir', compileHotServer)\\n.on('change',function(){Object.keys(require.cache).forEach(function(modulePath){// console.log(modulePath)\\nif(~modulePath.indexOf(mockPath)){delete require.cache[modulePath];}});});// .on('unlink', compileHotServer)\\n// .on('unlinkDir', compileHotServer)\\n});return mockPaths.map(function(item){var result=[];try{result=require(path.join(mockPath,item));}catch(err){console.log(err);}return result;});};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2Rldi9nZXRNb2NrUm91dGVzLm5vcGFyc2UuanM/NzI1MCIsIndlYnBhY2s6Ly8vP2Q0MWQiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZnMgPSByZXF1aXJlKCdmcycpXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpXG5jb25zdCBjaG9raWRhciA9IHJlcXVpcmUoJ2Nob2tpZGFyJylcbmNvbnN0IGdldFN1YkRpcnMgPSBwYXJlbnQgPT4gZnNcbiAgLnJlYWRkaXJTeW5jKHBhcmVudClcbiAgLmZpbHRlcihkaXIgPT4gZnMuc3RhdFN5bmMocGF0aC5qb2luKHBhcmVudCwgZGlyKSkuaXNEaXJlY3RvcnkoKSlcbi8qXG7ilJzilIDilIAgbW9ja1xu4pSC4pSU4pSA4pSAIFRhc2tMaXN0XG7ilIIgICAg4pSc4pSA4pSAIGluZGV4LmpzXG7ilIIgICAg4pSU4pSA4pSAIHRhc2stbGlzdC5qc29uXG4gKi9cbmNvbnN0IE1PQ0sgPSAnbW9jaydcblxubW9kdWxlLmV4cG9ydHMgPSBjd2QgPT4ge1xuICBjb25zdCBtb2NrUGF0aCA9IHBhdGguam9pbihjd2QsIE1PQ0spXG4gIGNvbnN0IG1vY2tQYXRocyA9IGdldFN1YkRpcnMobW9ja1BhdGgpXG4gIGNvbnN0IHdhdGNoZXIgPSBjaG9raWRhci53YXRjaChtb2NrUGF0aClcbiAgd2F0Y2hlci5vbigncmVhZHknLCAoKSA9PiB7XG4gICAgd2F0Y2hlclxuICAgICAgLy8gLm9uKCdhZGQnLCBjb21waWxlSG90U2VydmVyKVxuICAgICAgLy8gLm9uKCdhZGREaXInLCBjb21waWxlSG90U2VydmVyKVxuICAgICAgLm9uKCdjaGFuZ2UnLCAoKSA9PiB7XG4gICAgICAgIE9iamVjdC5rZXlzKHJlcXVpcmUuY2FjaGUpLmZvckVhY2gobW9kdWxlUGF0aCA9PiB7XG4gICAgICAgICAgLy8gY29uc29sZS5sb2cobW9kdWxlUGF0aClcbiAgICAgICAgICBpZiAofm1vZHVsZVBhdGguaW5kZXhPZihtb2NrUGF0aCkpIHtcbiAgICAgICAgICAgIGRlbGV0ZSByZXF1aXJlLmNhY2hlW21vZHVsZVBhdGhdXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgfSlcbiAgICAgIC8vIC5vbigndW5saW5rJywgY29tcGlsZUhvdFNlcnZlcilcbiAgICAgIC8vIC5vbigndW5saW5rRGlyJywgY29tcGlsZUhvdFNlcnZlcilcbiAgfSlcblxuICByZXR1cm4gbW9ja1BhdGhzLm1hcChpdGVtID0+IHtcbiAgICBsZXQgcmVzdWx0ID0gW11cbiAgICB0cnkge1xuICAgICAgcmVzdWx0ID0gcmVxdWlyZShwYXRoLmpvaW4obW9ja1BhdGgsIGl0ZW0pKVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5sb2coZXJyKVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0XG4gIH0pXG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2Rldi9nZXRNb2NrUm91dGVzLm5vcGFyc2UuanMiLCJ1bmRlZmluZWRcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUNZQTtBQVNBO0FBRkE7QUFNQTtBQU1BOyIsInNvdXJjZVJvb3QiOiIifQ==\");\n\n/***/ },\n/* 60 */\n/* unknown exports provided */\n/* all exports used */\n/*!**********************!*\\\n  !*** ./dev/index.js ***!\n  \\**********************/\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"'use strict';Object.defineProperty(exports,\\\"__esModule\\\",{value:true});exports.mockServer=exports.devServer=undefined;var _devServer2=__webpack_require__(/*! ./devServer */ 39);var _devServer3=_interopRequireDefault(_devServer2);var _mockServer2=__webpack_require__(/*! ./mockServer */ 40);var _mockServer3=_interopRequireDefault(_mockServer2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}exports.devServer=_devServer3.default;exports.mockServer=_mockServer3.default;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2Rldi9pbmRleC5qcz83YjdlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZXZTZXJ2ZXIgZnJvbSAnLi9kZXZTZXJ2ZXInXG5leHBvcnQgbW9ja1NlcnZlciBmcm9tICcuL21vY2tTZXJ2ZXInXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2Rldi9pbmRleC5qcyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\");\n\n/***/ },\n/* 61 */\n/* unknown exports provided */\n/* all exports used */\n/*!*******************************!*\\\n  !*** ./utils/clearConsole.js ***!\n  \\*******************************/\n/***/ function(module, exports) {\n\n\"use strict\";\neval(\"'use strict';/**\\n * Copyright (c) 2015-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n */var isFirstClear=true;function clearConsole(){// On first run, clear completely so it doesn't show half screen on Windows.\\n// On next runs, use a different sequence that properly scrolls back.\\nprocess.stdout.write(isFirstClear?'\\\\x1bc':'\\\\x1b[2J\\\\x1b[0f');isFirstClear=false;}module.exports=clearConsole;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3V0aWxzL2NsZWFyQ29uc29sZS5qcz9lNWJjIiwid2VicGFjazovLy8/ZDQxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cblxudmFyIGlzRmlyc3RDbGVhciA9IHRydWU7XG5mdW5jdGlvbiBjbGVhckNvbnNvbGUoKSB7XG4gIC8vIE9uIGZpcnN0IHJ1biwgY2xlYXIgY29tcGxldGVseSBzbyBpdCBkb2Vzbid0IHNob3cgaGFsZiBzY3JlZW4gb24gV2luZG93cy5cbiAgLy8gT24gbmV4dCBydW5zLCB1c2UgYSBkaWZmZXJlbnQgc2VxdWVuY2UgdGhhdCBwcm9wZXJseSBzY3JvbGxzIGJhY2suXG4gIHByb2Nlc3Muc3Rkb3V0LndyaXRlKGlzRmlyc3RDbGVhciA/ICdcXHgxYmMnIDogJ1xceDFiWzJKXFx4MWJbMGYnKTtcbiAgaXNGaXJzdENsZWFyID0gZmFsc2U7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY2xlYXJDb25zb2xlO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy91dGlscy9jbGVhckNvbnNvbGUuanMiLCJ1bmRlZmluZWRcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztBQVNBO0FDR0E7Iiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 62 */\n/* unknown exports provided */\n/* all exports used */\n/*!****************************************!*\\\n  !*** ./utils/formatWebpackMessages.js ***!\n  \\****************************************/\n/***/ function(module, exports) {\n\n\"use strict\";\neval(\"'use strict';/**\\n * Copyright (c) 2015-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n */// WARNING: this code is untranspiled and is used in browser too.\\n// Please make sure any changes are in ES5 or contribute a Babel compile step.\\n// Some custom utilities to prettify Webpack output.\\n// This is quite hacky and hopefully won't be needed when Webpack fixes this.\\n// https://github.com/webpack/webpack/issues/2878\\nvar friendlySyntaxErrorLabel='Syntax error:';function isLikelyASyntaxError(message){return message.indexOf(friendlySyntaxErrorLabel)!==-1;}// Cleans up webpack error messages.\\nfunction formatMessage(message){var lines=message.split('\\\\n');// line #0 is filename\\n// line #1 is the main error message\\nif(!lines[0]||!lines[1]){return message;}// Remove webpack-specific loader notation from filename.\\n// Before:\\n// ./~/css-loader!./~/postcss-loader!./src/App.css\\n// After:\\n// ./src/App.css\\nif(lines[0].lastIndexOf('!')!==-1){lines[0]=lines[0].substr(lines[0].lastIndexOf('!')+1);}// Cleans up verbose \\\"module not found\\\" messages for files and packages.\\nif(lines[1].indexOf('Module not found: ')===0){lines=[lines[0],// Clean up message because \\\"Module not found: \\\" is descriptive enough.\\nlines[1].replace('Cannot resolve \\\\'file\\\\' or \\\\'directory\\\\' ','').replace('Cannot resolve module ','').replace('Error: ',''),// Skip all irrelevant lines.\\n// (For some reason they only appear on the client in browser.)\\n'',lines[lines.length-1]// error location is the last line\\n];}// Cleans up syntax error messages.\\nif(lines[1].indexOf('Module build failed: ')===0){// For some reason, on the client messages appear duplicated:\\n// https://github.com/webpack/webpack/issues/3008\\n// This won't happen in Node but since we share this helpers,\\n// we will dedupe them right here. We will ignore all lines\\n// after the original error message text is repeated the second time.\\nvar errorText=lines[1].substr('Module build failed: '.length);var cleanedLines=[];var hasReachedDuplicateMessage=false;// Gather lines until we reach the beginning of duplicate message.\\nlines.forEach(function(line,index){if(// First time it occurs is fine.\\nindex!==1&&// line.endsWith(errorText)\\nline.length>=errorText.length&&line.indexOf(errorText)===line.length-errorText.length){// We see the same error message for the second time!\\n// Filter out repeated error message and everything after it.\\nhasReachedDuplicateMessage=true;}if(!hasReachedDuplicateMessage||// Print last line anyway because it contains the source location\\nindex===lines.length-1){// This line is OK to appear in the output.\\ncleanedLines.push(line);}});// We are clean now!\\nlines=cleanedLines;// Finally, brush up the error message a little.\\nlines[1]=lines[1].replace('Module build failed: SyntaxError:',friendlySyntaxErrorLabel);}// Reassemble the message.\\nmessage=lines.join('\\\\n');// Internal stacks are generally useless so we strip them\\nmessage=message.replace(/^\\\\s*at\\\\s.*:\\\\d+:\\\\d+[\\\\s\\\\)]*\\\\n/gm,'');// at ... ...:x:y\\nreturn message;}function formatWebpackMessages(json){var formattedErrors=json.errors.map(function(message){return'Error in '+formatMessage(message);});var formattedWarnings=json.warnings.map(function(message){return'Warning in '+formatMessage(message);});var result={errors:formattedErrors,warnings:formattedWarnings};if(result.errors.some(isLikelyASyntaxError)){// If there are any syntax errors, show just them.\\n// This prevents a confusing ESLint parsing error\\n// preceding a much more useful Babel syntax error.\\nresult.errors=result.errors.filter(isLikelyASyntaxError);}return result;}module.exports=formatWebpackMessages;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3V0aWxzL2Zvcm1hdFdlYnBhY2tNZXNzYWdlcy5qcz8yMzBjIiwid2VicGFjazovLy8/ZDQxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cblxuLy8gV0FSTklORzogdGhpcyBjb2RlIGlzIHVudHJhbnNwaWxlZCBhbmQgaXMgdXNlZCBpbiBicm93c2VyIHRvby5cbi8vIFBsZWFzZSBtYWtlIHN1cmUgYW55IGNoYW5nZXMgYXJlIGluIEVTNSBvciBjb250cmlidXRlIGEgQmFiZWwgY29tcGlsZSBzdGVwLlxuXG4vLyBTb21lIGN1c3RvbSB1dGlsaXRpZXMgdG8gcHJldHRpZnkgV2VicGFjayBvdXRwdXQuXG4vLyBUaGlzIGlzIHF1aXRlIGhhY2t5IGFuZCBob3BlZnVsbHkgd29uJ3QgYmUgbmVlZGVkIHdoZW4gV2VicGFjayBmaXhlcyB0aGlzLlxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2svd2VicGFjay9pc3N1ZXMvMjg3OFxuXG52YXIgZnJpZW5kbHlTeW50YXhFcnJvckxhYmVsID0gJ1N5bnRheCBlcnJvcjonO1xuXG5mdW5jdGlvbiBpc0xpa2VseUFTeW50YXhFcnJvcihtZXNzYWdlKSB7XG4gIHJldHVybiBtZXNzYWdlLmluZGV4T2YoZnJpZW5kbHlTeW50YXhFcnJvckxhYmVsKSAhPT0gLTE7XG59XG5cbi8vIENsZWFucyB1cCB3ZWJwYWNrIGVycm9yIG1lc3NhZ2VzLlxuZnVuY3Rpb24gZm9ybWF0TWVzc2FnZShtZXNzYWdlKSB7XG4gIHZhciBsaW5lcyA9IG1lc3NhZ2Uuc3BsaXQoJ1xcbicpO1xuXG4gIC8vIGxpbmUgIzAgaXMgZmlsZW5hbWVcbiAgLy8gbGluZSAjMSBpcyB0aGUgbWFpbiBlcnJvciBtZXNzYWdlXG4gIGlmICghbGluZXNbMF0gfHwgIWxpbmVzWzFdKSB7XG4gICAgcmV0dXJuIG1lc3NhZ2U7XG4gIH1cblxuICAvLyBSZW1vdmUgd2VicGFjay1zcGVjaWZpYyBsb2FkZXIgbm90YXRpb24gZnJvbSBmaWxlbmFtZS5cbiAgLy8gQmVmb3JlOlxuICAvLyAuL34vY3NzLWxvYWRlciEuL34vcG9zdGNzcy1sb2FkZXIhLi9zcmMvQXBwLmNzc1xuICAvLyBBZnRlcjpcbiAgLy8gLi9zcmMvQXBwLmNzc1xuICBpZiAobGluZXNbMF0ubGFzdEluZGV4T2YoJyEnKSAhPT0gLTEpIHtcbiAgICBsaW5lc1swXSA9IGxpbmVzWzBdLnN1YnN0cihsaW5lc1swXS5sYXN0SW5kZXhPZignIScpICsgMSk7XG4gIH1cblxuICAvLyBDbGVhbnMgdXAgdmVyYm9zZSBcIm1vZHVsZSBub3QgZm91bmRcIiBtZXNzYWdlcyBmb3IgZmlsZXMgYW5kIHBhY2thZ2VzLlxuICBpZiAobGluZXNbMV0uaW5kZXhPZignTW9kdWxlIG5vdCBmb3VuZDogJykgPT09IDApIHtcbiAgICBsaW5lcyA9IFtcbiAgICAgIGxpbmVzWzBdLFxuICAgICAgLy8gQ2xlYW4gdXAgbWVzc2FnZSBiZWNhdXNlIFwiTW9kdWxlIG5vdCBmb3VuZDogXCIgaXMgZGVzY3JpcHRpdmUgZW5vdWdoLlxuICAgICAgbGluZXNbMV0ucmVwbGFjZShcbiAgICAgICAgJ0Nhbm5vdCByZXNvbHZlIFxcJ2ZpbGVcXCcgb3IgXFwnZGlyZWN0b3J5XFwnICcsICcnXG4gICAgICApLnJlcGxhY2UoXG4gICAgICAgICdDYW5ub3QgcmVzb2x2ZSBtb2R1bGUgJywgJydcbiAgICAgICkucmVwbGFjZShcbiAgICAgICAgJ0Vycm9yOiAnLCAnJ1xuICAgICAgKSxcbiAgICAgIC8vIFNraXAgYWxsIGlycmVsZXZhbnQgbGluZXMuXG4gICAgICAvLyAoRm9yIHNvbWUgcmVhc29uIHRoZXkgb25seSBhcHBlYXIgb24gdGhlIGNsaWVudCBpbiBicm93c2VyLilcbiAgICAgICcnLFxuICAgICAgbGluZXNbbGluZXMubGVuZ3RoIC0gMV0gLy8gZXJyb3IgbG9jYXRpb24gaXMgdGhlIGxhc3QgbGluZVxuICAgIF1cbiAgfVxuXG4gIC8vIENsZWFucyB1cCBzeW50YXggZXJyb3IgbWVzc2FnZXMuXG4gIGlmIChsaW5lc1sxXS5pbmRleE9mKCdNb2R1bGUgYnVpbGQgZmFpbGVkOiAnKSA9PT0gMCkge1xuICAgIC8vIEZvciBzb21lIHJlYXNvbiwgb24gdGhlIGNsaWVudCBtZXNzYWdlcyBhcHBlYXIgZHVwbGljYXRlZDpcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay93ZWJwYWNrL2lzc3Vlcy8zMDA4XG4gICAgLy8gVGhpcyB3b24ndCBoYXBwZW4gaW4gTm9kZSBidXQgc2luY2Ugd2Ugc2hhcmUgdGhpcyBoZWxwZXJzLFxuICAgIC8vIHdlIHdpbGwgZGVkdXBlIHRoZW0gcmlnaHQgaGVyZS4gV2Ugd2lsbCBpZ25vcmUgYWxsIGxpbmVzXG4gICAgLy8gYWZ0ZXIgdGhlIG9yaWdpbmFsIGVycm9yIG1lc3NhZ2UgdGV4dCBpcyByZXBlYXRlZCB0aGUgc2Vjb25kIHRpbWUuXG4gICAgdmFyIGVycm9yVGV4dCA9IGxpbmVzWzFdLnN1YnN0cignTW9kdWxlIGJ1aWxkIGZhaWxlZDogJy5sZW5ndGgpO1xuICAgIHZhciBjbGVhbmVkTGluZXMgPSBbXTtcbiAgICB2YXIgaGFzUmVhY2hlZER1cGxpY2F0ZU1lc3NhZ2UgPSBmYWxzZTtcbiAgICAvLyBHYXRoZXIgbGluZXMgdW50aWwgd2UgcmVhY2ggdGhlIGJlZ2lubmluZyBvZiBkdXBsaWNhdGUgbWVzc2FnZS5cbiAgICBsaW5lcy5mb3JFYWNoKGZ1bmN0aW9uKGxpbmUsIGluZGV4KSB7XG4gICAgICBpZiAoXG4gICAgICAgIC8vIEZpcnN0IHRpbWUgaXQgb2NjdXJzIGlzIGZpbmUuXG4gICAgICAgIGluZGV4ICE9PSAxICYmXG4gICAgICAgIC8vIGxpbmUuZW5kc1dpdGgoZXJyb3JUZXh0KVxuICAgICAgICBsaW5lLmxlbmd0aCA+PSBlcnJvclRleHQubGVuZ3RoICYmXG4gICAgICAgIGxpbmUuaW5kZXhPZihlcnJvclRleHQpID09PSBsaW5lLmxlbmd0aCAtIGVycm9yVGV4dC5sZW5ndGhcbiAgICAgICkge1xuICAgICAgICAvLyBXZSBzZWUgdGhlIHNhbWUgZXJyb3IgbWVzc2FnZSBmb3IgdGhlIHNlY29uZCB0aW1lIVxuICAgICAgICAvLyBGaWx0ZXIgb3V0IHJlcGVhdGVkIGVycm9yIG1lc3NhZ2UgYW5kIGV2ZXJ5dGhpbmcgYWZ0ZXIgaXQuXG4gICAgICAgIGhhc1JlYWNoZWREdXBsaWNhdGVNZXNzYWdlID0gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIGlmIChcbiAgICAgICAgIWhhc1JlYWNoZWREdXBsaWNhdGVNZXNzYWdlIHx8XG4gICAgICAgIC8vIFByaW50IGxhc3QgbGluZSBhbnl3YXkgYmVjYXVzZSBpdCBjb250YWlucyB0aGUgc291cmNlIGxvY2F0aW9uXG4gICAgICAgIGluZGV4ID09PSBsaW5lcy5sZW5ndGggLSAxXG4gICAgICApIHtcbiAgICAgICAgLy8gVGhpcyBsaW5lIGlzIE9LIHRvIGFwcGVhciBpbiB0aGUgb3V0cHV0LlxuICAgICAgICBjbGVhbmVkTGluZXMucHVzaChsaW5lKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICAvLyBXZSBhcmUgY2xlYW4gbm93IVxuICAgIGxpbmVzID0gY2xlYW5lZExpbmVzO1xuICAgIC8vIEZpbmFsbHksIGJydXNoIHVwIHRoZSBlcnJvciBtZXNzYWdlIGEgbGl0dGxlLlxuICAgIGxpbmVzWzFdID0gbGluZXNbMV0ucmVwbGFjZShcbiAgICAgICdNb2R1bGUgYnVpbGQgZmFpbGVkOiBTeW50YXhFcnJvcjonLFxuICAgICAgZnJpZW5kbHlTeW50YXhFcnJvckxhYmVsXG4gICAgKTtcbiAgfVxuXG4gIC8vIFJlYXNzZW1ibGUgdGhlIG1lc3NhZ2UuXG4gIG1lc3NhZ2UgPSBsaW5lcy5qb2luKCdcXG4nKTtcbiAgLy8gSW50ZXJuYWwgc3RhY2tzIGFyZSBnZW5lcmFsbHkgdXNlbGVzcyBzbyB3ZSBzdHJpcCB0aGVtXG4gIG1lc3NhZ2UgPSBtZXNzYWdlLnJlcGxhY2UoXG4gICAgL15cXHMqYXRcXHMuKjpcXGQrOlxcZCtbXFxzXFwpXSpcXG4vZ20sICcnXG4gICk7IC8vIGF0IC4uLiAuLi46eDp5XG5cbiAgcmV0dXJuIG1lc3NhZ2U7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFdlYnBhY2tNZXNzYWdlcyhqc29uKSB7XG4gIHZhciBmb3JtYXR0ZWRFcnJvcnMgPSBqc29uLmVycm9ycy5tYXAoZnVuY3Rpb24obWVzc2FnZSkge1xuICAgIHJldHVybiAnRXJyb3IgaW4gJyArIGZvcm1hdE1lc3NhZ2UobWVzc2FnZSlcbiAgfSk7XG4gIHZhciBmb3JtYXR0ZWRXYXJuaW5ncyA9IGpzb24ud2FybmluZ3MubWFwKGZ1bmN0aW9uKG1lc3NhZ2UpIHtcbiAgICByZXR1cm4gJ1dhcm5pbmcgaW4gJyArIGZvcm1hdE1lc3NhZ2UobWVzc2FnZSlcbiAgfSk7XG4gIHZhciByZXN1bHQgPSB7XG4gICAgZXJyb3JzOiBmb3JtYXR0ZWRFcnJvcnMsXG4gICAgd2FybmluZ3M6IGZvcm1hdHRlZFdhcm5pbmdzXG4gIH07XG4gIGlmIChyZXN1bHQuZXJyb3JzLnNvbWUoaXNMaWtlbHlBU3ludGF4RXJyb3IpKSB7XG4gICAgLy8gSWYgdGhlcmUgYXJlIGFueSBzeW50YXggZXJyb3JzLCBzaG93IGp1c3QgdGhlbS5cbiAgICAvLyBUaGlzIHByZXZlbnRzIGEgY29uZnVzaW5nIEVTTGludCBwYXJzaW5nIGVycm9yXG4gICAgLy8gcHJlY2VkaW5nIGEgbXVjaCBtb3JlIHVzZWZ1bCBCYWJlbCBzeW50YXggZXJyb3IuXG4gICAgcmVzdWx0LmVycm9ycyA9IHJlc3VsdC5lcnJvcnMuZmlsdGVyKGlzTGlrZWx5QVN5bnRheEVycm9yKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZvcm1hdFdlYnBhY2tNZXNzYWdlcztcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvdXRpbHMvZm9ybWF0V2VicGFja01lc3NhZ2VzLmpzIiwidW5kZWZpbmVkXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vICJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7QUFTQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFPQTtBQ0lBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFJQTtBQVFBO0FBQ0E7QUFaQTtBQWtCQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUdBO0FBRUE7QUFJQTtBQUNBO0FBS0E7QUFHQTtBQUlBO0FBRUE7QURPQTtBQ0VBO0FBSUE7QUFnQkE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\");\n\n/***/ },\n/* 63 */\n/* unknown exports provided */\n/* all exports used */\n/*!******************************!*\\\n  !*** ./utils/openBrowser.js ***!\n  \\******************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"'use strict';/**\\n * Copyright (c) 2015-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n */var execSync=__webpack_require__(/*! child_process */ 17).execSync;var opn=__webpack_require__(/*! opn */ 30);function openBrowser(url){if(process.platform==='darwin'){try{// Try our best to reuse existing tab\\n// on OS X Google Chrome with AppleScript\\nexecSync('ps cax | grep \\\"Google Chrome\\\"');execSync('osascript openChrome.applescript '+url,{cwd:__dirname,stdio:'ignore'});return true;}catch(err){// Ignore errors.\\n}}// Fallback to opn\\n// (It will always open new tab)\\ntry{opn(url);return true;}catch(err){return false;}}module.exports=openBrowser;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3V0aWxzL29wZW5Ccm93c2VyLmpzPzAwOTIiLCJ3ZWJwYWNrOi8vLz9kNDFkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG52YXIgZXhlY1N5bmMgPSByZXF1aXJlKCdjaGlsZF9wcm9jZXNzJykuZXhlY1N5bmM7XG52YXIgb3BuID0gcmVxdWlyZSgnb3BuJyk7XG5cbmZ1bmN0aW9uIG9wZW5Ccm93c2VyKHVybCkge1xuICBpZiAocHJvY2Vzcy5wbGF0Zm9ybSA9PT0gJ2RhcndpbicpIHtcbiAgICB0cnkge1xuICAgICAgLy8gVHJ5IG91ciBiZXN0IHRvIHJldXNlIGV4aXN0aW5nIHRhYlxuICAgICAgLy8gb24gT1MgWCBHb29nbGUgQ2hyb21lIHdpdGggQXBwbGVTY3JpcHRcbiAgICAgIGV4ZWNTeW5jKCdwcyBjYXggfCBncmVwIFwiR29vZ2xlIENocm9tZVwiJyk7XG4gICAgICBleGVjU3luYyhcbiAgICAgICAgJ29zYXNjcmlwdCBvcGVuQ2hyb21lLmFwcGxlc2NyaXB0ICcgKyB1cmwsXG4gICAgICAgIHtjd2Q6IF9fZGlybmFtZSwgc3RkaW86ICdpZ25vcmUnfVxuICAgICAgKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgLy8gSWdub3JlIGVycm9ycy5cbiAgICB9XG4gIH1cbiAgLy8gRmFsbGJhY2sgdG8gb3BuXG4gIC8vIChJdCB3aWxsIGFsd2F5cyBvcGVuIG5ldyB0YWIpXG4gIHRyeSB7XG4gICAgb3BuKHVybCk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG9wZW5Ccm93c2VyO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy91dGlscy9vcGVuQnJvd3Nlci5qcyIsInVuZGVmaW5lZFxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7O0FBU0E7QUNPQTtBQUNBO0FBUUE7QUFHQTsiLCJzb3VyY2VSb290IjoiIn0=\");\n\n/***/ },\n/* 64 */\n/* unknown exports provided */\n/* all exports used */\n/*!***********************!*\\\n  !*** ../package.json ***!\n  \\***********************/\n/***/ function(module, exports) {\n\neval(\"module.exports = {\\n\\t\\\"name\\\": \\\"fe\\\",\\n\\t\\\"description\\\": \\\"Grunt plugin to generate grunt init templates\\\",\\n\\t\\\"version\\\": \\\"0.1.8\\\",\\n\\t\\\"homepage\\\": \\\"https://leecade.github.com/fe\\\",\\n\\t\\\"author\\\": {\\n\\t\\t\\\"name\\\": \\\"leecade\\\",\\n\\t\\t\\\"email\\\": \\\"leecade@163.com\\\",\\n\\t\\t\\\"url\\\": \\\"https://github.com/leecade\\\"\\n\\t},\\n\\t\\\"repository\\\": {\\n\\t\\t\\\"type\\\": \\\"git\\\",\\n\\t\\t\\\"url\\\": \\\"git://github.com/leecade/fe.git\\\"\\n\\t},\\n\\t\\\"bugs\\\": {\\n\\t\\t\\\"url\\\": \\\"https://github.com/leecade/fe/issues\\\"\\n\\t},\\n\\t\\\"dependencies\\\": {\\n\\t\\t\\\"autoprefixer\\\": \\\"^6.5.1\\\",\\n\\t\\t\\\"babel-polyfill\\\": \\\"^6.13.0\\\",\\n\\t\\t\\\"case-sensitive-paths-webpack-plugin\\\": \\\"^1.1.4\\\",\\n\\t\\t\\\"chalk\\\": \\\"^1.1.3\\\",\\n\\t\\t\\\"chokidar\\\": \\\"^1.6.0\\\",\\n\\t\\t\\\"colors\\\": \\\"^1.1.2\\\",\\n\\t\\t\\\"commander\\\": \\\"^2.9.0\\\",\\n\\t\\t\\\"css-loader\\\": \\\"^0.25.0\\\",\\n\\t\\t\\\"debug\\\": \\\"^2.2.0\\\",\\n\\t\\t\\\"detect-port\\\": \\\"^1.0.1\\\",\\n\\t\\t\\\"execa\\\": \\\"^0.5.0\\\",\\n\\t\\t\\\"express\\\": \\\"^4.14.0\\\",\\n\\t\\t\\\"file-loader\\\": \\\"^0.9.0\\\",\\n\\t\\t\\\"find-cache-dir\\\": \\\"^0.1.1\\\",\\n\\t\\t\\\"findup\\\": \\\"^0.1.5\\\",\\n\\t\\t\\\"html-webpack-plugin\\\": \\\"^2.22.0\\\",\\n\\t\\t\\\"inquirer\\\": \\\"^1.2.2\\\",\\n\\t\\t\\\"json-loader\\\": \\\"^0.5.4\\\",\\n\\t\\t\\\"kcors\\\": \\\"^2.1.1\\\",\\n\\t\\t\\\"koa\\\": \\\"^2.0.0\\\",\\n\\t\\t\\\"koa-bodyparser\\\": \\\"^3.1.0\\\",\\n\\t\\t\\\"koa-cors\\\": \\\"0.0.16\\\",\\n\\t\\t\\\"koa-jsonp\\\": \\\"^2.0.2\\\",\\n\\t\\t\\\"koa-logger\\\": \\\"^2.0.0\\\",\\n\\t\\t\\\"koa-router\\\": \\\"^7.0.1\\\",\\n\\t\\t\\\"listr\\\": \\\"^0.6.1\\\",\\n\\t\\t\\\"metalsmith\\\": \\\"^2.2.0\\\",\\n\\t\\t\\\"ora\\\": \\\"^0.3.0\\\",\\n\\t\\t\\\"postcss-loader\\\": \\\"^1.0.0\\\",\\n\\t\\t\\\"progress\\\": \\\"^1.1.8\\\",\\n\\t\\t\\\"promise\\\": \\\"^7.1.1\\\",\\n\\t\\t\\\"request\\\": \\\"^2.75.0\\\",\\n\\t\\t\\\"semver\\\": \\\"^5.3.0\\\",\\n\\t\\t\\\"style-loader\\\": \\\"^0.13.1\\\",\\n\\t\\t\\\"updtr\\\": \\\"^0.2.1\\\",\\n\\t\\t\\\"url-loader\\\": \\\"^0.5.7\\\",\\n\\t\\t\\\"webpack\\\": \\\"^2.1.0-beta.15\\\",\\n\\t\\t\\\"webpack-dev-middleware\\\": \\\"^1.8.1\\\",\\n\\t\\t\\\"webpack-dev-server\\\": \\\"^2.1.0-beta.0\\\",\\n\\t\\t\\\"webpack-hot-middleware\\\": \\\"^2.12.2\\\",\\n\\t\\t\\\"whatwg-fetch\\\": \\\"^1.0.0\\\"\\n\\t},\\n\\t\\\"devDependencies\\\": {\\n\\t\\t\\\"babel-core\\\": \\\"^6.14.0\\\",\\n\\t\\t\\\"babel-eslint\\\": \\\"^7.0.0\\\",\\n\\t\\t\\\"babel-loader\\\": \\\"^6.2.5\\\",\\n\\t\\t\\\"babel-preset-fe\\\": \\\"^1.0.11\\\",\\n\\t\\t\\\"espower\\\": \\\"^1.3.2\\\",\\n\\t\\t\\\"json-loader\\\": \\\"^0.5.4\\\",\\n\\t\\t\\\"power-assert\\\": \\\"^1.4.1\\\",\\n\\t\\t\\\"pre-commit\\\": \\\"^1.1.3\\\",\\n\\t\\t\\\"snazzy\\\": \\\"^5.0.0\\\",\\n\\t\\t\\\"standard\\\": \\\"^8.1.0\\\"\\n\\t},\\n\\t\\\"keywords\\\": [\\n\\t\\t\\\"fe\\\"\\n\\t],\\n\\t\\\"engines\\\": {\\n\\t\\t\\\"npm\\\": \\\"3.x\\\"\\n\\t},\\n\\t\\\"main\\\": \\\"lib/index.js\\\",\\n\\t\\\"files\\\": [\\n\\t\\t\\\"bin\\\",\\n\\t\\t\\\"lib\\\"\\n\\t],\\n\\t\\\"bin\\\": \\\"bin/fe\\\",\\n\\t\\\"scripts\\\": {\\n\\t\\t\\\"dev\\\": \\\"webpack --watch\\\",\\n\\t\\t\\\"start\\\": \\\"npm run dev\\\",\\n\\t\\t\\\"precommit\\\": \\\"git diff --name-only --cached --relative | grep '\\\\\\\\.jsx\\\\\\\\?$' | xargs standard | snazzy; if [ $? -ne 0 ]; then exit 1; fi\\\"\\n\\t},\\n\\t\\\"pre-commit\\\": {\\n\\t\\t\\\"run\\\": [\\n\\t\\t\\t\\\"precommit\\\"\\n\\t\\t],\\n\\t\\t\\\"silent\\\": true\\n\\t},\\n\\t\\\"standard\\\": {\\n\\t\\t\\\"parser\\\": \\\"babel-eslint\\\",\\n\\t\\t\\\"global\\\": [\\n\\t\\t\\t\\\"fetch\\\"\\n\\t\\t],\\n\\t\\t\\\"ignore\\\": [\\n\\t\\t\\t\\\"bin/\\\",\\n\\t\\t\\t\\\"lib/\\\",\\n\\t\\t\\t\\\"mock/\\\",\\n\\t\\t\\t\\\"example/dist/\\\",\\n\\t\\t\\t\\\"node_modules/\\\"\\n\\t\\t]\\n\\t},\\n\\t\\\"license\\\": \\\"MIT\\\"\\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vcGFja2FnZS5qc29uPzBmYTkiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG5cdFwibmFtZVwiOiBcImZlXCIsXG5cdFwiZGVzY3JpcHRpb25cIjogXCJHcnVudCBwbHVnaW4gdG8gZ2VuZXJhdGUgZ3J1bnQgaW5pdCB0ZW1wbGF0ZXNcIixcblx0XCJ2ZXJzaW9uXCI6IFwiMC4xLjhcIixcblx0XCJob21lcGFnZVwiOiBcImh0dHBzOi8vbGVlY2FkZS5naXRodWIuY29tL2ZlXCIsXG5cdFwiYXV0aG9yXCI6IHtcblx0XHRcIm5hbWVcIjogXCJsZWVjYWRlXCIsXG5cdFx0XCJlbWFpbFwiOiBcImxlZWNhZGVAMTYzLmNvbVwiLFxuXHRcdFwidXJsXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL2xlZWNhZGVcIlxuXHR9LFxuXHRcInJlcG9zaXRvcnlcIjoge1xuXHRcdFwidHlwZVwiOiBcImdpdFwiLFxuXHRcdFwidXJsXCI6IFwiZ2l0Oi8vZ2l0aHViLmNvbS9sZWVjYWRlL2ZlLmdpdFwiXG5cdH0sXG5cdFwiYnVnc1wiOiB7XG5cdFx0XCJ1cmxcIjogXCJodHRwczovL2dpdGh1Yi5jb20vbGVlY2FkZS9mZS9pc3N1ZXNcIlxuXHR9LFxuXHRcImRlcGVuZGVuY2llc1wiOiB7XG5cdFx0XCJhdXRvcHJlZml4ZXJcIjogXCJeNi41LjFcIixcblx0XHRcImJhYmVsLXBvbHlmaWxsXCI6IFwiXjYuMTMuMFwiLFxuXHRcdFwiY2FzZS1zZW5zaXRpdmUtcGF0aHMtd2VicGFjay1wbHVnaW5cIjogXCJeMS4xLjRcIixcblx0XHRcImNoYWxrXCI6IFwiXjEuMS4zXCIsXG5cdFx0XCJjaG9raWRhclwiOiBcIl4xLjYuMFwiLFxuXHRcdFwiY29sb3JzXCI6IFwiXjEuMS4yXCIsXG5cdFx0XCJjb21tYW5kZXJcIjogXCJeMi45LjBcIixcblx0XHRcImNzcy1sb2FkZXJcIjogXCJeMC4yNS4wXCIsXG5cdFx0XCJkZWJ1Z1wiOiBcIl4yLjIuMFwiLFxuXHRcdFwiZGV0ZWN0LXBvcnRcIjogXCJeMS4wLjFcIixcblx0XHRcImV4ZWNhXCI6IFwiXjAuNS4wXCIsXG5cdFx0XCJleHByZXNzXCI6IFwiXjQuMTQuMFwiLFxuXHRcdFwiZmlsZS1sb2FkZXJcIjogXCJeMC45LjBcIixcblx0XHRcImZpbmQtY2FjaGUtZGlyXCI6IFwiXjAuMS4xXCIsXG5cdFx0XCJmaW5kdXBcIjogXCJeMC4xLjVcIixcblx0XHRcImh0bWwtd2VicGFjay1wbHVnaW5cIjogXCJeMi4yMi4wXCIsXG5cdFx0XCJpbnF1aXJlclwiOiBcIl4xLjIuMlwiLFxuXHRcdFwianNvbi1sb2FkZXJcIjogXCJeMC41LjRcIixcblx0XHRcImtjb3JzXCI6IFwiXjIuMS4xXCIsXG5cdFx0XCJrb2FcIjogXCJeMi4wLjBcIixcblx0XHRcImtvYS1ib2R5cGFyc2VyXCI6IFwiXjMuMS4wXCIsXG5cdFx0XCJrb2EtY29yc1wiOiBcIjAuMC4xNlwiLFxuXHRcdFwia29hLWpzb25wXCI6IFwiXjIuMC4yXCIsXG5cdFx0XCJrb2EtbG9nZ2VyXCI6IFwiXjIuMC4wXCIsXG5cdFx0XCJrb2Etcm91dGVyXCI6IFwiXjcuMC4xXCIsXG5cdFx0XCJsaXN0clwiOiBcIl4wLjYuMVwiLFxuXHRcdFwibWV0YWxzbWl0aFwiOiBcIl4yLjIuMFwiLFxuXHRcdFwib3JhXCI6IFwiXjAuMy4wXCIsXG5cdFx0XCJwb3N0Y3NzLWxvYWRlclwiOiBcIl4xLjAuMFwiLFxuXHRcdFwicHJvZ3Jlc3NcIjogXCJeMS4xLjhcIixcblx0XHRcInByb21pc2VcIjogXCJeNy4xLjFcIixcblx0XHRcInJlcXVlc3RcIjogXCJeMi43NS4wXCIsXG5cdFx0XCJzZW12ZXJcIjogXCJeNS4zLjBcIixcblx0XHRcInN0eWxlLWxvYWRlclwiOiBcIl4wLjEzLjFcIixcblx0XHRcInVwZHRyXCI6IFwiXjAuMi4xXCIsXG5cdFx0XCJ1cmwtbG9hZGVyXCI6IFwiXjAuNS43XCIsXG5cdFx0XCJ3ZWJwYWNrXCI6IFwiXjIuMS4wLWJldGEuMTVcIixcblx0XHRcIndlYnBhY2stZGV2LW1pZGRsZXdhcmVcIjogXCJeMS44LjFcIixcblx0XHRcIndlYnBhY2stZGV2LXNlcnZlclwiOiBcIl4yLjEuMC1iZXRhLjBcIixcblx0XHRcIndlYnBhY2staG90LW1pZGRsZXdhcmVcIjogXCJeMi4xMi4yXCIsXG5cdFx0XCJ3aGF0d2ctZmV0Y2hcIjogXCJeMS4wLjBcIlxuXHR9LFxuXHRcImRldkRlcGVuZGVuY2llc1wiOiB7XG5cdFx0XCJiYWJlbC1jb3JlXCI6IFwiXjYuMTQuMFwiLFxuXHRcdFwiYmFiZWwtZXNsaW50XCI6IFwiXjcuMC4wXCIsXG5cdFx0XCJiYWJlbC1sb2FkZXJcIjogXCJeNi4yLjVcIixcblx0XHRcImJhYmVsLXByZXNldC1mZVwiOiBcIl4xLjAuMTFcIixcblx0XHRcImVzcG93ZXJcIjogXCJeMS4zLjJcIixcblx0XHRcImpzb24tbG9hZGVyXCI6IFwiXjAuNS40XCIsXG5cdFx0XCJwb3dlci1hc3NlcnRcIjogXCJeMS40LjFcIixcblx0XHRcInByZS1jb21taXRcIjogXCJeMS4xLjNcIixcblx0XHRcInNuYXp6eVwiOiBcIl41LjAuMFwiLFxuXHRcdFwic3RhbmRhcmRcIjogXCJeOC4xLjBcIlxuXHR9LFxuXHRcImtleXdvcmRzXCI6IFtcblx0XHRcImZlXCJcblx0XSxcblx0XCJlbmdpbmVzXCI6IHtcblx0XHRcIm5wbVwiOiBcIjMueFwiXG5cdH0sXG5cdFwibWFpblwiOiBcImxpYi9pbmRleC5qc1wiLFxuXHRcImZpbGVzXCI6IFtcblx0XHRcImJpblwiLFxuXHRcdFwibGliXCJcblx0XSxcblx0XCJiaW5cIjogXCJiaW4vZmVcIixcblx0XCJzY3JpcHRzXCI6IHtcblx0XHRcImRldlwiOiBcIndlYnBhY2sgLS13YXRjaFwiLFxuXHRcdFwic3RhcnRcIjogXCJucG0gcnVuIGRldlwiLFxuXHRcdFwicHJlY29tbWl0XCI6IFwiZ2l0IGRpZmYgLS1uYW1lLW9ubHkgLS1jYWNoZWQgLS1yZWxhdGl2ZSB8IGdyZXAgJ1xcXFwuanN4XFxcXD8kJyB8IHhhcmdzIHN0YW5kYXJkIHwgc25henp5OyBpZiBbICQ/IC1uZSAwIF07IHRoZW4gZXhpdCAxOyBmaVwiXG5cdH0sXG5cdFwicHJlLWNvbW1pdFwiOiB7XG5cdFx0XCJydW5cIjogW1xuXHRcdFx0XCJwcmVjb21taXRcIlxuXHRcdF0sXG5cdFx0XCJzaWxlbnRcIjogdHJ1ZVxuXHR9LFxuXHRcInN0YW5kYXJkXCI6IHtcblx0XHRcInBhcnNlclwiOiBcImJhYmVsLWVzbGludFwiLFxuXHRcdFwiZ2xvYmFsXCI6IFtcblx0XHRcdFwiZmV0Y2hcIlxuXHRcdF0sXG5cdFx0XCJpZ25vcmVcIjogW1xuXHRcdFx0XCJiaW4vXCIsXG5cdFx0XHRcImxpYi9cIixcblx0XHRcdFwibW9jay9cIixcblx0XHRcdFwiZXhhbXBsZS9kaXN0L1wiLFxuXHRcdFx0XCJub2RlX21vZHVsZXMvXCJcblx0XHRdXG5cdH0sXG5cdFwibGljZW5zZVwiOiBcIk1JVFwiXG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL3BhY2thZ2UuanNvblxuLy8gbW9kdWxlIGlkID0gNjRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\");\n\n/***/ },\n/* 65 */,\n/* 66 */,\n/* 67 */\n/* unknown exports provided */\n/* all exports used */\n/*!*******************!*\\\n  !*** multi index ***!\n  \\*******************/\n/***/ function(module, exports, __webpack_require__) {\n\n__webpack_require__(/*! babel-polyfill */12);\nmodule.exports = __webpack_require__(/*! /Users/yuji/gitlab/fe/src/index.js */45);\n\n\n/***/ }\n/******/ ]);//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }

/******/ });